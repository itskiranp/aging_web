{"version":3,"sources":["index.js","../src/ui/findandreplaceformview.ts","../src/findandreplaceui.ts","../src/findcommand.ts","../src/findandreplacestate.ts","../src/replacecommandbase.ts","../src/replacecommand.ts","../src/replaceallcommand.ts","../src/findnextcommand.ts","../src/findpreviouscommand.ts","../src/findandreplaceutils.ts","../src/findandreplaceediting.ts","../src/findandreplace.ts"],"names":["FindAndReplaceFormView","View","constructor","locale","t","children","createCollection","set","bind","to","matchCount","isDirty","_findInputView","_createInputField","_findPrevButtonView","_createButton","label","class","icon","icons","previousArrow","keystroke","tooltip","_findNextButtonView","_replaceInputView","_inputsDivView","_createInputsDiv","_matchCaseSwitchView","_createMatchCaseSwitch","_wholeWordsOnlySwitchView","_createWholeWordsOnlySwitch","_advancedOptionsCollapsibleView","_createAdvancedOptionsCollapsible","_replaceAllButtonView","withText","_replaceButtonView","_findButtonView","_actionButtonsDivView","_createActionButtonsDiv","_focusTracker","FocusTracker","_keystrokes","KeystrokeHandler","_focusables","ViewCollection","focusCycler","FocusCycler","focusables","focusTracker","keystrokeHandler","actions","focusPrevious","focusNext","addMany","setTemplate","tag","attributes","tabindex","render","submitHandler","view","_initFocusCycling","_initKeystrokeHandling","destroy","focus","direction","focusLast","focusFirst","errorText","_textToFind","fieldView","element","value","_textToReplace","inputsDivView","on","delegate","findPrevious","findNext","_injectFindResultsCounter","replace","resultsFound","isEnabled","isFocused","fire","searchText","matchCase","_matchCase","wholeWords","_wholeWordsOnly","bindTemplate","resultsCounterView","highlightOffset","if","text","updateFindInputPadding","inputElement","isVisible","counterWidth","Rect","width","paddingPropertyName","uiLanguageDirection","style","priority","template","push","collapsible","CollapsibleView","isCollapsed","actionsDivView","replaceAll","replaceText","_onFindButtonExecute","matchCaseSwitchButton","SwitchButtonView","wholeWordsOnlySwitchButton","childViews","buttonView","forEach","v","add","stopPropagation","data","stopPropagationAndPreventDefault","preventDefault","listenTo","event","target","_areCommandsEnabled","options","button","ButtonView","className","labeledInput","LabeledFieldView","createLabeledInputText","FindAndReplaceUI","Plugin","requires","Dialog","pluginName","isOfficialPlugin","editor","config","define","formView","isUiUsingDropdown","get","findCommand","commands","ui","componentFactory","_createDropdown","_createDialogButtonForToolbar","keystrokes","cancelEvent","DropdownView","dropdownButtonView","isOn","plugins","_createDialogButtonForMenuBar","accessibility","addKeystrokeInfos","dropdownView","createDropdown","once","_createFormView","FormHeaderView","panelView","name","isOpen","_setupFormView","loupeIcon","dialog","id","hide","_showDialog","MenuBarMenuListItemButtonView","dialogPlugin","role","isToggleable","ButtonClass","show","title","content","position","DialogViewPosition","EDITOR_TOP_SIDE","onShow","onHide","CssTransitionDisablerMixin","findAndReplaceEditing","editingState","state","results","length","findNextCommand","findPreviousCommand","replaceCommand","replaceAllCommand","evt","disableCssTransitions","reset","select","enableCssTransitions","FindCommand","Command","affectsData","_state","execute","callbackOrText","model","findAndReplaceUtils","findCallback","callbackSearchText","args","findByTextCallback","oldCallback","result","document","getRootNames","reduce","currentResults","rootName","updateFindResultFromRange","createRangeIn","getRoot","clear","highlightedResult","lastSearchCallback","matchWholeWords","FindAndReplaceState","ObservableMixin","Collection","eventInfo","removed","index","Array","from","highlightedResultRemoved","change","writer","removedResult","markers","has","marker","removeMarker","nextHighlightedIndex","refreshHighlightOffset","oldMatchId","split","oldMarker","highlightedOffset","sortSearchResultsByMarkerPositions","indexOf","sortMapping","before","same","after","different","flatMap","filter","getStart","root","sort","a","b","compareWith","ReplaceCommandBase","_isEnabledBasedOnSelection","_replace","replacementText","range","getRange","canEditAt","remove","textAttributes","item","getItems","is","getAttributes","insertContent","createText","ReplaceCommand","oldHighlightOffset","Math","max","sortedResults","ReplaceAllCommand","newText","textToReplace","searchResult","FindNextCommand","currentIndex","getIndex","nextIndex","FindPreviousCommand","previousIndex","FindAndReplaceUtils","startResults","checkIfResultAlreadyOnList","find","markerItem","resultsMarker","resultRange","markerRange","isEqual","type","schema","checkChild","foundItems","rangeToText","foundItem","resultId","uid","addMarker","usingOperation","createRange","createPositionAt","start","end","findInsertIndex","shallow","rangeText","node","searchTerm","flags","regExpQuery","escapeRegExp","nonLetterGroup","RegExp","test","regExp","matches","matchAll","map","regexpMatchToFindResult","resultsList","markerToInsert","isBefore","matchResult","lastGroupIndex","startOffset","HIGHLIGHT_CLASS","FindAndReplaceEditing","_defineConverters","_defineCommands","newValue","oldValue","newMatchId","scrollToHighlightedResult","domConverter","editing","viewRange","mapper","toViewRange","scrollViewportToShowTarget","viewRangeToDom","viewportOffset","debouncedScrollListener","debounce","cancel","isSearchActive","_onDocumentChange","stopListening","findAttributes","_isSearchActive","conversion","for","markerToHighlight","markerName","classes","changedNodes","Set","removedMarkers","changes","differ","getChanges","changedMarkers","getChangedMarkers","nodeAfter","isInline","parent","getMarkersAtPosition","markerAtChange","newRange","markersInNode","getMarkersIntersectingRange","changedSearchResults","nodeToCheck","changedNodeSearchResults","createRangeOn","markerToCheck","FindAndReplace","stop"],"mappings":"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AAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,C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","file":"index.js.map","sourcesContent":["import { icons, Plugin, Command } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { View, ViewCollection, FocusCycler, submitHandler, CollapsibleView, SwitchButtonView, ButtonView, LabeledFieldView, createLabeledInputText, Dialog, DropdownView, createDropdown, FormHeaderView, MenuBarMenuListItemButtonView, DialogViewPosition, CssTransitionDisablerMixin } from '@ckeditor/ckeditor5-ui/dist/index.js';\nimport { FocusTracker, KeystrokeHandler, isVisible, Rect, ObservableMixin, Collection, uid, scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/dist/index.js';\nimport { escapeRegExp, debounce } from 'lodash-es';\n\n/**\n * The find and replace form view class.\n *\n * See {@link module:find-and-replace/ui/findandreplaceformview~FindAndReplaceFormView}.\n */ class FindAndReplaceFormView extends View {\n    /**\n\t * A collection of child views.\n\t */ children;\n    /**\n\t * The find in text input view that stores the searched string.\n\t *\n\t * @internal\n\t */ _findInputView;\n    /**\n\t * The replace input view.\n\t */ _replaceInputView;\n    /**\n\t * The find button view that initializes the search process.\n\t */ _findButtonView;\n    /**\n\t * The find previous button view.\n\t */ _findPrevButtonView;\n    /**\n\t * The find next button view.\n\t */ _findNextButtonView;\n    /**\n\t * A collapsible view aggregating the advanced search options.\n\t */ _advancedOptionsCollapsibleView;\n    /**\n\t * A switch button view controlling the \"Match case\" option.\n\t */ _matchCaseSwitchView;\n    /**\n\t * A switch button view controlling the \"Whole words only\" option.\n\t */ _wholeWordsOnlySwitchView;\n    /**\n\t * The replace button view.\n\t */ _replaceButtonView;\n    /**\n\t * The replace all button view.\n\t */ _replaceAllButtonView;\n    /**\n\t * The `div` aggregating the inputs.\n\t */ _inputsDivView;\n    /**\n\t * The `div` aggregating the action buttons.\n\t */ _actionButtonsDivView;\n    /**\n\t * Tracks information about the DOM focus in the form.\n\t */ _focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ _keystrokes;\n    /**\n\t * A collection of views that can be focused in the form.\n\t */ _focusables;\n    /**\n\t * Helps cycling over {@link #_focusables} in the form.\n\t */ focusCycler;\n    /**\n\t * Creates a view of find and replace form.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        const t = locale.t;\n        this.children = this.createCollection();\n        this.set('matchCount', 0);\n        this.set('highlightOffset', 0);\n        this.set('isDirty', false);\n        this.set('_areCommandsEnabled', {});\n        this.set('_resultsCounterText', '');\n        this.set('_matchCase', false);\n        this.set('_wholeWordsOnly', false);\n        this.bind('_searchResultsFound').to(this, 'matchCount', this, 'isDirty', (matchCount, isDirty)=>{\n            return matchCount > 0 && !isDirty;\n        });\n        this._findInputView = this._createInputField(t('Find in text…'));\n        this._findPrevButtonView = this._createButton({\n            label: t('Previous result'),\n            class: 'ck-button-prev',\n            icon: icons.previousArrow,\n            keystroke: 'Shift+F3',\n            tooltip: true\n        });\n        this._findNextButtonView = this._createButton({\n            label: t('Next result'),\n            class: 'ck-button-next',\n            icon: icons.previousArrow,\n            keystroke: 'F3',\n            tooltip: true\n        });\n        this._replaceInputView = this._createInputField(t('Replace with…'), 'ck-labeled-field-replace');\n        this._inputsDivView = this._createInputsDiv();\n        this._matchCaseSwitchView = this._createMatchCaseSwitch();\n        this._wholeWordsOnlySwitchView = this._createWholeWordsOnlySwitch();\n        this._advancedOptionsCollapsibleView = this._createAdvancedOptionsCollapsible();\n        this._replaceAllButtonView = this._createButton({\n            label: t('Replace all'),\n            class: 'ck-button-replaceall',\n            withText: true\n        });\n        this._replaceButtonView = this._createButton({\n            label: t('Replace'),\n            class: 'ck-button-replace',\n            withText: true\n        });\n        this._findButtonView = this._createButton({\n            label: t('Find'),\n            class: 'ck-button-find ck-button-action',\n            withText: true\n        });\n        this._actionButtonsDivView = this._createActionButtonsDiv();\n        this._focusTracker = new FocusTracker();\n        this._keystrokes = new KeystrokeHandler();\n        this._focusables = new ViewCollection();\n        this.focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this._focusTracker,\n            keystrokeHandler: this._keystrokes,\n            actions: {\n                // Navigate form fields backwards using the <kbd>Shift</kbd> + <kbd>Tab</kbd> keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the <kbd>Tab</kbd> key.\n                focusNext: 'tab'\n            }\n        });\n        this.children.addMany([\n            this._inputsDivView,\n            this._advancedOptionsCollapsibleView,\n            this._actionButtonsDivView\n        ]);\n        this.setTemplate({\n            tag: 'form',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-find-and-replace-form'\n                ],\n                tabindex: '-1'\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        submitHandler({\n            view: this\n        });\n        this._initFocusCycling();\n        this._initKeystrokeHandling();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this._focusTracker.destroy();\n        this._keystrokes.destroy();\n    }\n    /**\n\t * @inheritDoc\n\t */ focus(direction) {\n        if (direction === -1) {\n            this.focusCycler.focusLast();\n        } else {\n            this.focusCycler.focusFirst();\n        }\n    }\n    /**\n\t * Resets the form before re-appearing.\n\t *\n\t * It clears error messages, hides the match counter and disables the replace feature\n\t * until the next hit of the \"Find\" button.\n\t *\n\t * **Note**: It does not reset inputs and options, though. This way the form works better in editors with\n\t * disappearing toolbar (e.g. BalloonEditor): hiding the toolbar by accident (together with the find and replace UI)\n\t * does not require filling the entire form again.\n\t */ reset() {\n        this._findInputView.errorText = null;\n        this.isDirty = true;\n    }\n    /**\n\t * Returns the value of the find input.\n\t */ get _textToFind() {\n        return this._findInputView.fieldView.element.value;\n    }\n    /**\n\t * Returns the value of the replace input.\n\t */ get _textToReplace() {\n        return this._replaceInputView.fieldView.element.value;\n    }\n    /**\n\t * Configures and returns the `<div>` aggregating all form inputs.\n\t */ _createInputsDiv() {\n        const locale = this.locale;\n        const t = locale.t;\n        const inputsDivView = new View(locale);\n        // Typing in the find field invalidates all previous results (the form is \"dirty\").\n        this._findInputView.fieldView.on('input', ()=>{\n            this.isDirty = true;\n        });\n        // Pressing prev/next buttons fires related event on the form.\n        this._findPrevButtonView.delegate('execute').to(this, 'findPrevious');\n        this._findNextButtonView.delegate('execute').to(this, 'findNext');\n        // Prev/next buttons will be disabled when related editor command gets disabled.\n        this._findPrevButtonView.bind('isEnabled').to(this, '_areCommandsEnabled', ({ findPrevious })=>findPrevious);\n        this._findNextButtonView.bind('isEnabled').to(this, '_areCommandsEnabled', ({ findNext })=>findNext);\n        this._injectFindResultsCounter();\n        this._replaceInputView.bind('isEnabled').to(this, '_areCommandsEnabled', this, '_searchResultsFound', ({ replace }, resultsFound)=>replace && resultsFound);\n        this._replaceInputView.bind('infoText').to(this._replaceInputView, 'isEnabled', this._replaceInputView, 'isFocused', (isEnabled, isFocused)=>{\n            if (isEnabled || !isFocused) {\n                return '';\n            }\n            return t('Tip: Find some text first in order to replace it.');\n        });\n        inputsDivView.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-find-and-replace-form__inputs'\n                ]\n            },\n            children: [\n                this._findInputView,\n                this._findPrevButtonView,\n                this._findNextButtonView,\n                this._replaceInputView\n            ]\n        });\n        return inputsDivView;\n    }\n    /**\n\t * The action performed when the {@link #_findButtonView} is pressed.\n\t */ _onFindButtonExecute() {\n        // When hitting \"Find\" in an empty input, an error should be displayed.\n        // Also, if the form was \"dirty\", it should remain so.\n        if (!this._textToFind) {\n            const t = this.t;\n            this._findInputView.errorText = t('Text to find must not be empty.');\n            return;\n        }\n        // Hitting \"Find\" automatically clears the dirty state.\n        this.isDirty = false;\n        this.fire('findNext', {\n            searchText: this._textToFind,\n            matchCase: this._matchCase,\n            wholeWords: this._wholeWordsOnly\n        });\n    }\n    /**\n\t * Configures an injects the find results counter displaying a \"N of M\" label of the {@link #_findInputView}.\n\t */ _injectFindResultsCounter() {\n        const locale = this.locale;\n        const t = locale.t;\n        const bind = this.bindTemplate;\n        const resultsCounterView = new View(this.locale);\n        this.bind('_resultsCounterText').to(this, 'highlightOffset', this, 'matchCount', (highlightOffset, matchCount)=>t('%0 of %1', [\n                highlightOffset,\n                matchCount\n            ]));\n        resultsCounterView.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-results-counter',\n                    // The counter only makes sense when the field text corresponds to search results in the editing.\n                    bind.if('isDirty', 'ck-hidden')\n                ]\n            },\n            children: [\n                {\n                    text: bind.to('_resultsCounterText')\n                }\n            ]\n        });\n        // The whole idea is that when the text of the counter changes, its width also increases/decreases and\n        // it consumes more or less space over the input. The input, on the other hand, should adjust it's right\n        // padding so its *entire* text always remains visible and available to the user.\n        const updateFindInputPadding = ()=>{\n            const inputElement = this._findInputView.fieldView.element;\n            // Don't adjust the padding if the input (also: counter) were not rendered or not inserted into DOM yet.\n            if (!inputElement || !isVisible(inputElement)) {\n                return;\n            }\n            const counterWidth = new Rect(resultsCounterView.element).width;\n            const paddingPropertyName = locale.uiLanguageDirection === 'ltr' ? 'paddingRight' : 'paddingLeft';\n            if (!counterWidth) {\n                inputElement.style[paddingPropertyName] = '';\n            } else {\n                inputElement.style[paddingPropertyName] = `calc( 2 * var(--ck-spacing-standard) + ${counterWidth}px )`;\n            }\n        };\n        // Adjust the input padding when the text of the counter changes, for instance \"1 of 200\" is narrower than \"123 of 200\".\n        // Using \"low\" priority to let the text be set by the template binding first.\n        this.on('change:_resultsCounterText', updateFindInputPadding, {\n            priority: 'low'\n        });\n        // Adjust the input padding when the counter shows or hides. When hidden, there should be no padding. When it shows, the\n        // padding should be set according to the text of the counter.\n        // Using \"low\" priority to let the text be set by the template binding first.\n        this.on('change:isDirty', updateFindInputPadding, {\n            priority: 'low'\n        });\n        // Put the counter element next to the <input> in the find field.\n        this._findInputView.template.children[0].children.push(resultsCounterView);\n    }\n    /**\n\t * Creates the collapsible view aggregating the advanced search options.\n\t */ _createAdvancedOptionsCollapsible() {\n        const t = this.locale.t;\n        const collapsible = new CollapsibleView(this.locale, [\n            this._matchCaseSwitchView,\n            this._wholeWordsOnlySwitchView\n        ]);\n        collapsible.set({\n            label: t('Advanced options'),\n            isCollapsed: true\n        });\n        return collapsible;\n    }\n    /**\n\t * Configures and returns the `<div>` element aggregating all form action buttons.\n\t */ _createActionButtonsDiv() {\n        const actionsDivView = new View(this.locale);\n        this._replaceButtonView.bind('isEnabled').to(this, '_areCommandsEnabled', this, '_searchResultsFound', ({ replace }, resultsFound)=>replace && resultsFound);\n        this._replaceAllButtonView.bind('isEnabled').to(this, '_areCommandsEnabled', this, '_searchResultsFound', ({ replaceAll }, resultsFound)=>replaceAll && resultsFound);\n        this._replaceButtonView.on('execute', ()=>{\n            this.fire('replace', {\n                searchText: this._textToFind,\n                replaceText: this._textToReplace\n            });\n        });\n        this._replaceAllButtonView.on('execute', ()=>{\n            this.fire('replaceAll', {\n                searchText: this._textToFind,\n                replaceText: this._textToReplace\n            });\n            this.focus();\n        });\n        this._findButtonView.on('execute', this._onFindButtonExecute.bind(this));\n        actionsDivView.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-find-and-replace-form__actions'\n                ]\n            },\n            children: [\n                this._replaceAllButtonView,\n                this._replaceButtonView,\n                this._findButtonView\n            ]\n        });\n        return actionsDivView;\n    }\n    /**\n\t * Creates, configures and returns and instance of a dropdown allowing users to narrow\n\t * the search criteria down. The dropdown has a list with switch buttons for each option.\n\t */ _createMatchCaseSwitch() {\n        const t = this.locale.t;\n        const matchCaseSwitchButton = new SwitchButtonView(this.locale);\n        matchCaseSwitchButton.set({\n            label: t('Match case'),\n            withText: true\n        });\n        // Let the switch be controlled by form's observable property.\n        matchCaseSwitchButton.bind('isOn').to(this, '_matchCase');\n        // // Update the state of the form when a switch is toggled.\n        matchCaseSwitchButton.on('execute', ()=>{\n            this._matchCase = !this._matchCase;\n            // Toggling a switch makes the form dirty because this changes search criteria\n            // just like typing text of the find input.\n            this.isDirty = true;\n        });\n        return matchCaseSwitchButton;\n    }\n    /**\n\t * Creates, configures and returns and instance of a dropdown allowing users to narrow\n\t * the search criteria down. The dropdown has a list with switch buttons for each option.\n\t */ _createWholeWordsOnlySwitch() {\n        const t = this.locale.t;\n        const wholeWordsOnlySwitchButton = new SwitchButtonView(this.locale);\n        wholeWordsOnlySwitchButton.set({\n            label: t('Whole words only'),\n            withText: true\n        });\n        // Let the switch be controlled by form's observable property.\n        wholeWordsOnlySwitchButton.bind('isOn').to(this, '_wholeWordsOnly');\n        // // Update the state of the form when a switch is toggled.\n        wholeWordsOnlySwitchButton.on('execute', ()=>{\n            this._wholeWordsOnly = !this._wholeWordsOnly;\n            // Toggling a switch makes the form dirty because this changes search criteria\n            // just like typing text of the find input.\n            this.isDirty = true;\n        });\n        return wholeWordsOnlySwitchButton;\n    }\n    /**\n\t * Initializes the {@link #_focusables} and {@link #_focusTracker} to allow navigation\n\t * using <kbd>Tab</kbd> and <kbd>Shift</kbd>+<kbd>Tab</kbd> keystrokes in the right order.\n\t */ _initFocusCycling() {\n        const childViews = [\n            this._findInputView,\n            this._findPrevButtonView,\n            this._findNextButtonView,\n            this._replaceInputView,\n            this._advancedOptionsCollapsibleView.buttonView,\n            this._matchCaseSwitchView,\n            this._wholeWordsOnlySwitchView,\n            this._replaceAllButtonView,\n            this._replaceButtonView,\n            this._findButtonView\n        ];\n        childViews.forEach((v)=>{\n            // Register the view as focusable.\n            this._focusables.add(v);\n            // Register the view in the focus tracker.\n            this._focusTracker.add(v.element);\n        });\n    }\n    /**\n\t * Initializes the keystroke handling in the form.\n\t */ _initKeystrokeHandling() {\n        const stopPropagation = (data)=>data.stopPropagation();\n        const stopPropagationAndPreventDefault = (data)=>{\n            data.stopPropagation();\n            data.preventDefault();\n        };\n        // Start listening for the keystrokes coming from #element.\n        this._keystrokes.listenTo(this.element);\n        // Find the next result upon F3.\n        this._keystrokes.set('f3', (event)=>{\n            stopPropagationAndPreventDefault(event);\n            this._findNextButtonView.fire('execute');\n        });\n        // Find the previous result upon F3.\n        this._keystrokes.set('shift+f3', (event)=>{\n            stopPropagationAndPreventDefault(event);\n            this._findPrevButtonView.fire('execute');\n        });\n        // Find or replace upon pressing Enter in the find and replace fields.\n        this._keystrokes.set('enter', (event)=>{\n            const target = event.target;\n            if (target === this._findInputView.fieldView.element) {\n                if (this._areCommandsEnabled.findNext) {\n                    this._findNextButtonView.fire('execute');\n                } else {\n                    this._findButtonView.fire('execute');\n                }\n                stopPropagationAndPreventDefault(event);\n            } else if (target === this._replaceInputView.fieldView.element && !this.isDirty) {\n                this._replaceButtonView.fire('execute');\n                stopPropagationAndPreventDefault(event);\n            }\n        });\n        // Find previous upon pressing Shift+Enter in the find field.\n        this._keystrokes.set('shift+enter', (event)=>{\n            const target = event.target;\n            if (target !== this._findInputView.fieldView.element) {\n                return;\n            }\n            if (this._areCommandsEnabled.findPrevious) {\n                this._findPrevButtonView.fire('execute');\n            } else {\n                this._findButtonView.fire('execute');\n            }\n            stopPropagationAndPreventDefault(event);\n        });\n        // Since the form is in the dropdown panel which is a child of the toolbar, the toolbar's\n        // keystroke handler would take over the key management in the URL input.\n        // We need to prevent this ASAP. Otherwise, the basic caret movement using the arrow keys will be impossible.\n        this._keystrokes.set('arrowright', stopPropagation);\n        this._keystrokes.set('arrowleft', stopPropagation);\n        this._keystrokes.set('arrowup', stopPropagation);\n        this._keystrokes.set('arrowdown', stopPropagation);\n    }\n    /**\n\t * Creates a button view.\n\t *\n\t * @param options The properties of the `ButtonView`.\n\t * @returns The button view instance.\n\t */ _createButton(options) {\n        const button = new ButtonView(this.locale);\n        button.set(options);\n        return button;\n    }\n    /**\n\t * Creates a labeled input view.\n\t *\n\t * @param label The input label.\n\t * @returns The labeled input view instance.\n\t */ _createInputField(label, className) {\n        const labeledInput = new LabeledFieldView(this.locale, createLabeledInputText);\n        labeledInput.label = label;\n        labeledInput.class = className;\n        return labeledInput;\n    }\n}\n\nvar loupeIcon = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m12.87 13.786 1.532-1.286 3.857 4.596a1 1 0 1 1-1.532 1.286l-3.857-4.596z\\\"/><path d=\\\"M16.004 8.5a6.5 6.5 0 0 1-9.216 5.905c-1.154-.53-.863-1.415-.663-1.615.194-.194.564-.592 1.635-.141a4.5 4.5 0 0 0 5.89-5.904l-.104-.227 1.332-1.331c.045-.046.196-.041.224.007a6.47 6.47 0 0 1 .902 3.306zm-3.4-5.715c.562.305.742 1.106.354 1.494-.388.388-.995.414-1.476.178a4.5 4.5 0 0 0-6.086 5.882l.114.236-1.348 1.349c-.038.037-.17.022-.198-.023a6.5 6.5 0 0 1 5.54-9.9 6.469 6.469 0 0 1 3.1.784z\\\"/><path d=\\\"M4.001 11.93.948 8.877a.2.2 0 0 1 .141-.341h6.106a.2.2 0 0 1 .141.341L4.283 11.93a.2.2 0 0 1-.282 0zm11.083-6.789 3.053 3.053a.2.2 0 0 1-.14.342H11.89a.2.2 0 0 1-.14-.342l3.052-3.053a.2.2 0 0 1 .282 0z\\\"/></svg>\";\n\n/**\n * The default find and replace UI.\n *\n * It registers the `'findAndReplace'` UI button in the editor's {@link module:ui/componentfactory~ComponentFactory component factory}.\n * that uses the {@link module:find-and-replace/findandreplace~FindAndReplace FindAndReplace} plugin API.\n */ class FindAndReplaceUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            Dialog\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'FindAndReplaceUI';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * A reference to the find and replace form view.\n\t */ formView;\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        editor.config.define('findAndReplace.uiType', 'dialog');\n        this.formView = null;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const isUiUsingDropdown = editor.config.get('findAndReplace.uiType') === 'dropdown';\n        const findCommand = editor.commands.get('find');\n        const t = this.editor.t;\n        // Register the toolbar component: dropdown or button (that opens a dialog).\n        editor.ui.componentFactory.add('findAndReplace', ()=>{\n            let view;\n            if (isUiUsingDropdown) {\n                view = this._createDropdown();\n                // Button should be disabled when in source editing mode. See #10001.\n                view.bind('isEnabled').to(findCommand);\n            } else {\n                view = this._createDialogButtonForToolbar();\n            }\n            editor.keystrokes.set('Ctrl+F', (data, cancelEvent)=>{\n                if (!findCommand.isEnabled) {\n                    return;\n                }\n                if (view instanceof DropdownView) {\n                    const dropdownButtonView = view.buttonView;\n                    if (!dropdownButtonView.isOn) {\n                        dropdownButtonView.fire('execute');\n                    }\n                } else {\n                    if (view.isOn) {\n                        // If the dialog is open, do not close it. Instead focus it.\n                        // Unfortunately we can't simply use:\n                        // \tthis.formView!.focus();\n                        // because it would always move focus to the first input field, which we don't want.\n                        editor.plugins.get('Dialog').view.focus();\n                    } else {\n                        view.fire('execute');\n                    }\n                }\n                cancelEvent();\n            });\n            return view;\n        });\n        if (!isUiUsingDropdown) {\n            editor.ui.componentFactory.add('menuBar:findAndReplace', ()=>{\n                return this._createDialogButtonForMenuBar();\n            });\n        }\n        // Add the information about the keystroke to the accessibility database.\n        editor.accessibility.addKeystrokeInfos({\n            keystrokes: [\n                {\n                    label: t('Find in the document'),\n                    keystroke: 'CTRL+F'\n                }\n            ]\n        });\n    }\n    /**\n\t * Creates a dropdown containing the find and replace form.\n\t */ _createDropdown() {\n        const editor = this.editor;\n        const t = editor.locale.t;\n        const dropdownView = createDropdown(editor.locale);\n        dropdownView.once('change:isOpen', ()=>{\n            this.formView = this._createFormView();\n            this.formView.children.add(new FormHeaderView(editor.locale, {\n                label: t('Find and replace')\n            }), 0);\n            dropdownView.panelView.children.add(this.formView);\n        });\n        // Every time a dropdown is opened, the search text field should get focused and selected for better UX.\n        // Note: Using the low priority here to make sure the following listener starts working after\n        // the default action of the drop-down is executed (i.e. the panel showed up). Otherwise,\n        // the invisible form/input cannot be focused/selected.\n        //\n        // Each time a dropdown is closed, move the focus back to the find and replace toolbar button\n        // and let the find and replace editing feature know that all search results can be invalidated\n        // and no longer should be marked in the content.\n        dropdownView.on('change:isOpen', (event, name, isOpen)=>{\n            if (isOpen) {\n                this._setupFormView();\n            } else {\n                this.fire('searchReseted');\n            }\n        }, {\n            priority: 'low'\n        });\n        dropdownView.buttonView.set({\n            icon: loupeIcon,\n            label: t('Find and replace'),\n            keystroke: 'CTRL+F',\n            tooltip: true\n        });\n        return dropdownView;\n    }\n    /**\n\t * Creates a button that opens a dialog with the find and replace form.\n\t */ _createDialogButtonForToolbar() {\n        const editor = this.editor;\n        const buttonView = this._createButton(ButtonView);\n        const dialog = editor.plugins.get('Dialog');\n        buttonView.set({\n            tooltip: true\n        });\n        // Button should be on when the find and replace dialog is opened.\n        buttonView.bind('isOn').to(dialog, 'id', (id)=>id === 'findAndReplace');\n        // Every time a dialog is opened, the search text field should get focused and selected for better UX.\n        // Each time a dialog is closed, move the focus back to the find and replace toolbar button\n        // and let the find and replace editing feature know that all search results can be invalidated\n        // and no longer should be marked in the content.\n        buttonView.on('execute', ()=>{\n            if (buttonView.isOn) {\n                dialog.hide();\n            } else {\n                this._showDialog();\n            }\n        });\n        return buttonView;\n    }\n    /**\n\t * Creates a button for for menu bar that will show find and replace dialog.\n\t */ _createDialogButtonForMenuBar() {\n        const buttonView = this._createButton(MenuBarMenuListItemButtonView);\n        const dialogPlugin = this.editor.plugins.get('Dialog');\n        const dialog = this.editor.plugins.get('Dialog');\n        buttonView.set({\n            role: 'menuitemcheckbox',\n            isToggleable: true\n        });\n        // Button should be on when the find and replace dialog is opened.\n        buttonView.bind('isOn').to(dialog, 'id', (id)=>id === 'findAndReplace');\n        buttonView.on('execute', ()=>{\n            if (dialogPlugin.id === 'findAndReplace') {\n                dialogPlugin.hide();\n                return;\n            }\n            this._showDialog();\n        });\n        return buttonView;\n    }\n    /**\n\t * Creates a button for find and replace command to use either in toolbar or in menu bar.\n\t */ _createButton(ButtonClass) {\n        const editor = this.editor;\n        const findCommand = editor.commands.get('find');\n        const buttonView = new ButtonClass(editor.locale);\n        const t = editor.locale.t;\n        // Button should be disabled when in source editing mode. See #10001.\n        buttonView.bind('isEnabled').to(findCommand);\n        buttonView.set({\n            icon: loupeIcon,\n            label: t('Find and replace'),\n            keystroke: 'CTRL+F'\n        });\n        return buttonView;\n    }\n    /**\n\t * Shows the find and replace dialog.\n\t */ _showDialog() {\n        const editor = this.editor;\n        const dialog = editor.plugins.get('Dialog');\n        const t = editor.locale.t;\n        if (!this.formView) {\n            this.formView = this._createFormView();\n        }\n        dialog.show({\n            id: 'findAndReplace',\n            title: t('Find and replace'),\n            content: this.formView,\n            position: DialogViewPosition.EDITOR_TOP_SIDE,\n            onShow: ()=>{\n                this._setupFormView();\n            },\n            onHide: ()=>{\n                this.fire('searchReseted');\n            }\n        });\n    }\n    /**\n\t * Sets up the form view for the find and replace.\n\t *\n\t * @param formView A related form view.\n\t */ _createFormView() {\n        const editor = this.editor;\n        const formView = new (CssTransitionDisablerMixin(FindAndReplaceFormView))(editor.locale);\n        const commands = editor.commands;\n        const findAndReplaceEditing = this.editor.plugins.get('FindAndReplaceEditing');\n        const editingState = findAndReplaceEditing.state;\n        formView.bind('highlightOffset').to(editingState, 'highlightedOffset');\n        // Let the form know how many results were found in total.\n        formView.listenTo(editingState.results, 'change', ()=>{\n            formView.matchCount = editingState.results.length;\n        });\n        // Command states are used to enable/disable individual form controls.\n        // To keep things simple, instead of binding 4 individual observables, there's only one that combines every\n        // commands' isEnabled state. Yes, it will change more often but this simplifies the structure of the form.\n        const findNextCommand = commands.get('findNext');\n        const findPreviousCommand = commands.get('findPrevious');\n        const replaceCommand = commands.get('replace');\n        const replaceAllCommand = commands.get('replaceAll');\n        formView.bind('_areCommandsEnabled').to(findNextCommand, 'isEnabled', findPreviousCommand, 'isEnabled', replaceCommand, 'isEnabled', replaceAllCommand, 'isEnabled', (findNext, findPrevious, replace, replaceAll)=>({\n                findNext,\n                findPrevious,\n                replace,\n                replaceAll\n            }));\n        // The UI plugin works as an interface between the form and the editing part of the feature.\n        formView.delegate('findNext', 'findPrevious', 'replace', 'replaceAll').to(this);\n        // Let the feature know that search results are no longer relevant because the user changed the searched phrase\n        // (or options) but didn't hit the \"Find\" button yet (e.g. still typing).\n        formView.on('change:isDirty', (evt, data, isDirty)=>{\n            if (isDirty) {\n                this.fire('searchReseted');\n            }\n        });\n        return formView;\n    }\n    /**\n\t * Clears the find and replace form and focuses the search text field.\n\t */ _setupFormView() {\n        this.formView.disableCssTransitions();\n        this.formView.reset();\n        this.formView._findInputView.fieldView.select();\n        this.formView.enableCssTransitions();\n    }\n}\n\n/**\n * The find command. It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */ class FindCommand extends Command {\n    /**\n\t * The find and replace state object used for command operations.\n\t */ _state;\n    /**\n\t * Creates a new `FindCommand` instance.\n\t *\n\t * @param editor The editor on which this command will be used.\n\t * @param state An object to hold plugin state.\n\t */ constructor(editor, state){\n        super(editor);\n        // The find command is always enabled.\n        this.isEnabled = true;\n        // It does not affect data so should be enabled in read-only mode.\n        this.affectsData = false;\n        this._state = state;\n    }\n    /**\n\t * Executes the command.\n\t *\n\t * @param callbackOrText\n\t * @param options Options object.\n\t * @param options.matchCase If set to `true`, the letter case will be matched.\n\t * @param options.wholeWords If set to `true`, only whole words that match `callbackOrText` will be matched.\n\t *\n\t * @fires execute\n\t */ execute(callbackOrText, { matchCase, wholeWords } = {}) {\n        const { editor } = this;\n        const { model } = editor;\n        const findAndReplaceUtils = editor.plugins.get('FindAndReplaceUtils');\n        let findCallback;\n        let callbackSearchText = '';\n        // Allow to execute `find()` on a plugin with a keyword only.\n        if (typeof callbackOrText === 'string') {\n            findCallback = (...args)=>({\n                    results: findAndReplaceUtils.findByTextCallback(callbackOrText, {\n                        matchCase,\n                        wholeWords\n                    })(...args),\n                    searchText: callbackOrText\n                });\n        } else {\n            findCallback = callbackOrText;\n        }\n        // Wrap the callback to get the search text that will be assigned to the state.\n        const oldCallback = findCallback;\n        findCallback = (...args)=>{\n            const result = oldCallback(...args);\n            if (result && 'searchText' in result) {\n                callbackSearchText = result.searchText;\n            }\n            return result;\n        };\n        // Initial search is done on all nodes in all roots inside the content.\n        const results = model.document.getRootNames().reduce((currentResults, rootName)=>findAndReplaceUtils.updateFindResultFromRange(model.createRangeIn(model.document.getRoot(rootName)), model, findCallback, currentResults), null);\n        this._state.clear(model);\n        this._state.results.addMany(results);\n        this._state.highlightedResult = results.get(0);\n        this._state.searchText = callbackSearchText;\n        if (findCallback) {\n            this._state.lastSearchCallback = findCallback;\n        }\n        this._state.matchCase = !!matchCase;\n        this._state.matchWholeWords = !!wholeWords;\n        return {\n            results,\n            findCallback\n        };\n    }\n}\n\n/**\n * The object storing find and replace plugin state for a given editor instance.\n */ class FindAndReplaceState extends /* #__PURE__ */ ObservableMixin() {\n    /**\n\t * Creates an instance of the state.\n\t */ constructor(model){\n        super();\n        this.set('results', new Collection());\n        this.set('highlightedResult', null);\n        this.set('highlightedOffset', 0);\n        this.set('searchText', '');\n        this.set('replaceText', '');\n        this.set('lastSearchCallback', null);\n        this.set('matchCase', false);\n        this.set('matchWholeWords', false);\n        this.results.on('change', (eventInfo, { removed, index })=>{\n            if (Array.from(removed).length) {\n                let highlightedResultRemoved = false;\n                model.change((writer)=>{\n                    for (const removedResult of removed){\n                        if (this.highlightedResult === removedResult) {\n                            highlightedResultRemoved = true;\n                        }\n                        if (model.markers.has(removedResult.marker.name)) {\n                            writer.removeMarker(removedResult.marker);\n                        }\n                    }\n                });\n                if (highlightedResultRemoved) {\n                    const nextHighlightedIndex = index >= this.results.length ? 0 : index;\n                    this.highlightedResult = this.results.get(nextHighlightedIndex);\n                }\n            }\n        });\n        this.on('change:highlightedResult', ()=>{\n            this.refreshHighlightOffset(model);\n        });\n    }\n    /**\n\t * Cleans the state up and removes markers from the model.\n\t */ clear(model) {\n        this.searchText = '';\n        model.change((writer)=>{\n            if (this.highlightedResult) {\n                const oldMatchId = this.highlightedResult.marker.name.split(':')[1];\n                const oldMarker = model.markers.get(`findResultHighlighted:${oldMatchId}`);\n                if (oldMarker) {\n                    writer.removeMarker(oldMarker);\n                }\n            }\n            [\n                ...this.results\n            ].forEach(({ marker })=>{\n                writer.removeMarker(marker);\n            });\n        });\n        this.results.clear();\n    }\n    /**\n\t * Refreshes the highlight result offset based on it's index within the result list.\n\t */ refreshHighlightOffset(model) {\n        const { highlightedResult, results } = this;\n        if (highlightedResult) {\n            this.highlightedOffset = sortSearchResultsByMarkerPositions(model, [\n                ...results\n            ]).indexOf(highlightedResult) + 1;\n        } else {\n            this.highlightedOffset = 0;\n        }\n    }\n}\n/**\n * Sorts search results by marker positions. Make sure that the results are sorted in the same order as they appear in the document\n * to avoid issues with the `find next` command. Apparently, the order of the results in the state might be different than the order\n * of the markers in the model.\n */ function sortSearchResultsByMarkerPositions(model, results) {\n    const sortMapping = {\n        before: -1,\n        same: 0,\n        after: 1,\n        different: 1\n    };\n    // `compareWith` doesn't play well with multi-root documents, so we need to sort results by root name first\n    // and then sort them within each root. It prevents \"random\" order of results when the document has multiple roots.\n    // See more: https://github.com/ckeditor/ckeditor5/pull/17292#issuecomment-2442084549\n    return model.document.getRootNames().flatMap((rootName)=>results.filter((result)=>result.marker.getStart().root.rootName === rootName).sort((a, b)=>sortMapping[a.marker.getStart().compareWith(b.marker.getStart())]));\n}\n\nclass ReplaceCommandBase extends Command {\n    /**\n\t * The find and replace state object used for command operations.\n\t */ _state;\n    /**\n\t * Creates a new `ReplaceCommand` instance.\n\t *\n\t * @param editor Editor on which this command will be used.\n\t * @param state An object to hold plugin state.\n\t */ constructor(editor, state){\n        super(editor);\n        // The replace command is always enabled.\n        this.isEnabled = true;\n        this._state = state;\n        // Since this command executes on particular result independent of selection, it should be checked directly in execute block.\n        this._isEnabledBasedOnSelection = false;\n    }\n    /**\n\t * Common logic for both `replace` commands.\n\t * Replace a given find result by a string or a callback.\n\t *\n\t * @param result A single result from the find command.\n\t */ _replace(replacementText, result) {\n        const { model } = this.editor;\n        const range = result.marker.getRange();\n        // Don't replace a result that is in non-editable place.\n        if (!model.canEditAt(range)) {\n            return;\n        }\n        model.change((writer)=>{\n            // Don't replace a result (marker) that found its way into the $graveyard (e.g. removed by collaborators).\n            if (range.root.rootName === '$graveyard') {\n                this._state.results.remove(result);\n                return;\n            }\n            let textAttributes = {};\n            for (const item of range.getItems()){\n                if (item.is('$text') || item.is('$textProxy')) {\n                    textAttributes = item.getAttributes();\n                    break;\n                }\n            }\n            model.insertContent(writer.createText(replacementText, textAttributes), range);\n            if (this._state.results.has(result)) {\n                this._state.results.remove(result);\n            }\n        });\n    }\n}\n\n/**\n * The replace command. It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */ class ReplaceCommand extends ReplaceCommandBase {\n    /**\n\t * Replace a given find result by a string or a callback.\n\t *\n\t * @param result A single result from the find command.\n\t *\n\t * @fires execute\n\t */ execute(replacementText, result) {\n        // We save highlight offset here, as the information about the highlighted result will be lost after the changes.\n        //\n        // It happens because result list is partially regenerated if the result is removed from the paragraph.\n        // Partially means that all sibling result items that are placed in the same paragraph are removed and added again,\n        // which causes the highlighted result to be malformed (usually it's set to first but it's not guaranteed).\n        //\n        // While this saving can be done in editing state, it's better to keep it here, as it's a part of the command logic\n        // and might be super tricky to implement in multi-root documents.\n        //\n        // Keep in mind that the highlighted offset is indexed from 1, as it's displayed to the user. It's why we subtract 1 here.\n        //\n        // More info: https://github.com/ckeditor/ckeditor5/issues/16648\n        const oldHighlightOffset = Math.max(this._state.highlightedOffset - 1, 0);\n        this._replace(replacementText, result);\n        // Let's revert the highlight offset to the previous value.\n        if (this._state.results.length) {\n            // Highlight offset operates on sorted array, so we need to sort the results first.\n            // It's not guaranteed that items in state results are sorted, usually they are, but it's not guaranteed when\n            // the result is removed from the paragraph with other highlighted results.\n            const sortedResults = sortSearchResultsByMarkerPositions(this.editor.model, [\n                ...this._state.results\n            ]);\n            // Just make sure that we don't overflow the results array, so use modulo.\n            this._state.highlightedResult = sortedResults[oldHighlightOffset % sortedResults.length];\n        }\n    }\n}\n\n/**\n * The replace all command. It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */ class ReplaceAllCommand extends ReplaceCommandBase {\n    /**\n\t * Replaces all the occurrences of `textToReplace` with a given `newText` string.\n\t *\n\t * ```ts\n\t *\treplaceAllCommand.execute( 'replaceAll', 'new text replacement', 'text to replace' );\n\t * ```\n\t *\n\t * Alternatively you can call it from editor instance:\n\t *\n\t * ```ts\n\t *\teditor.execute( 'replaceAll', 'new text', 'old text' );\n\t * ```\n\t *\n\t * @param newText Text that will be inserted to the editor for each match.\n\t * @param textToReplace Text to be replaced or a collection of matches\n\t * as returned by the find command.\n\t *\n\t * @fires module:core/command~Command#event:execute\n\t */ execute(newText, textToReplace) {\n        const { editor } = this;\n        const { model } = editor;\n        const findAndReplaceUtils = editor.plugins.get('FindAndReplaceUtils');\n        const results = textToReplace instanceof Collection ? textToReplace : model.document.getRootNames().reduce((currentResults, rootName)=>findAndReplaceUtils.updateFindResultFromRange(model.createRangeIn(model.document.getRoot(rootName)), model, findAndReplaceUtils.findByTextCallback(textToReplace, this._state), currentResults), null);\n        if (results.length) {\n            // Wrapped in single change will batch it into one transaction.\n            model.change(()=>{\n                [\n                    ...results\n                ].forEach((searchResult)=>{\n                    // Just reuse logic from the replace command to replace a single match.\n                    this._replace(newText, searchResult);\n                });\n            });\n        }\n    }\n}\n\n/**\n * The find next command. Moves the highlight to the next search result.\n *\n * It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */ class FindNextCommand extends Command {\n    /**\n\t * The find and replace state object used for command operations.\n\t */ _state;\n    /**\n\t * Creates a new `FindNextCommand` instance.\n\t *\n\t * @param editor The editor on which this command will be used.\n\t * @param state An object to hold plugin state.\n\t */ constructor(editor, state){\n        super(editor);\n        // It does not affect data so should be enabled in read-only mode.\n        this.affectsData = false;\n        this._state = state;\n        this.isEnabled = false;\n        this.listenTo(this._state.results, 'change', ()=>{\n            this.isEnabled = this._state.results.length > 1;\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ refresh() {\n        this.isEnabled = this._state.results.length > 1;\n    }\n    /**\n\t * @inheritDoc\n\t */ execute() {\n        const results = this._state.results;\n        const currentIndex = results.getIndex(this._state.highlightedResult);\n        const nextIndex = currentIndex + 1 >= results.length ? 0 : currentIndex + 1;\n        this._state.highlightedResult = this._state.results.get(nextIndex);\n    }\n}\n\n/**\n * The find previous command. Moves the highlight to the previous search result.\n *\n * It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */ class FindPreviousCommand extends FindNextCommand {\n    /**\n\t * @inheritDoc\n\t */ execute() {\n        const results = this._state.results;\n        const currentIndex = results.getIndex(this._state.highlightedResult);\n        const previousIndex = currentIndex - 1 < 0 ? this._state.results.length - 1 : currentIndex - 1;\n        this._state.highlightedResult = this._state.results.get(previousIndex);\n    }\n}\n\n/**\n * A set of helpers related to find and replace.\n */ class FindAndReplaceUtils extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'FindAndReplaceUtils';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * Executes findCallback and updates search results list.\n\t *\n\t * @param range The model range to scan for matches.\n\t * @param model The model.\n\t * @param findCallback The callback that should return `true` if provided text matches the search term.\n\t * @param startResults An optional collection of find matches that the function should\n\t * start with. This would be a collection returned by a previous `updateFindResultFromRange()` call.\n\t * @returns A collection of objects describing find match.\n\t *\n\t * An example structure:\n\t *\n\t * ```js\n\t * {\n\t *\tid: resultId,\n\t *\tlabel: foundItem.label,\n\t *\tmarker\n\t *\t}\n\t * ```\n\t */ updateFindResultFromRange(range, model, findCallback, startResults) {\n        const results = startResults || new Collection();\n        const checkIfResultAlreadyOnList = (marker)=>results.find((markerItem)=>{\n                const { marker: resultsMarker } = markerItem;\n                const resultRange = resultsMarker.getRange();\n                const markerRange = marker.getRange();\n                return resultRange.isEqual(markerRange);\n            });\n        model.change((writer)=>{\n            [\n                ...range\n            ].forEach(({ type, item })=>{\n                if (type === 'elementStart') {\n                    if (model.schema.checkChild(item, '$text')) {\n                        let foundItems = findCallback({\n                            item,\n                            text: this.rangeToText(model.createRangeIn(item))\n                        });\n                        if (!foundItems) {\n                            return;\n                        }\n                        if ('results' in foundItems) {\n                            foundItems = foundItems.results;\n                        }\n                        foundItems.forEach((foundItem)=>{\n                            const resultId = `findResult:${uid()}`;\n                            const marker = writer.addMarker(resultId, {\n                                usingOperation: false,\n                                affectsData: false,\n                                range: writer.createRange(writer.createPositionAt(item, foundItem.start), writer.createPositionAt(item, foundItem.end))\n                            });\n                            const index = findInsertIndex(results, marker);\n                            if (!checkIfResultAlreadyOnList(marker)) {\n                                results.add({\n                                    id: resultId,\n                                    label: foundItem.label,\n                                    marker\n                                }, index);\n                            }\n                        });\n                    }\n                }\n            });\n        });\n        return results;\n    }\n    /**\n\t * Returns text representation of a range. The returned text length should be the same as range length.\n\t * In order to achieve this, this function will replace inline elements (text-line) as new line character (\"\\n\").\n\t *\n\t * @param range The model range.\n\t * @returns The text content of the provided range.\n\t */ rangeToText(range) {\n        return Array.from(range.getItems({\n            shallow: true\n        })).reduce((rangeText, node)=>{\n            // Trim text to a last occurrence of an inline element and update range start.\n            if (!(node.is('$text') || node.is('$textProxy'))) {\n                // Editor has only one inline element defined in schema: `<softBreak>` which is treated as new line character in blocks.\n                // Special handling might be needed for other inline elements (inline widgets).\n                return `${rangeText}\\n`;\n            }\n            return rangeText + node.data;\n        }, '');\n    }\n    /**\n\t * Creates a text matching callback for a specified search term and matching options.\n\t *\n\t * @param searchTerm The search term.\n\t * @param options Matching options.\n\t * \t- options.matchCase=false If set to `true` letter casing will be ignored.\n\t * \t- options.wholeWords=false If set to `true` only whole words that match `callbackOrText` will be matched.\n\t */ findByTextCallback(searchTerm, options) {\n        let flags = 'gu';\n        if (!options.matchCase) {\n            flags += 'i';\n        }\n        let regExpQuery = `(${escapeRegExp(searchTerm)})`;\n        if (options.wholeWords) {\n            const nonLetterGroup = '[^a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF]';\n            if (!new RegExp('^' + nonLetterGroup).test(searchTerm)) {\n                regExpQuery = `(^|${nonLetterGroup}|_)${regExpQuery}`;\n            }\n            if (!new RegExp(nonLetterGroup + '$').test(searchTerm)) {\n                regExpQuery = `${regExpQuery}(?=_|${nonLetterGroup}|$)`;\n            }\n        }\n        const regExp = new RegExp(regExpQuery, flags);\n        function findCallback({ text }) {\n            const matches = [\n                ...text.matchAll(regExp)\n            ];\n            return matches.map(regexpMatchToFindResult);\n        }\n        return findCallback;\n    }\n}\n// Finds the appropriate index in the resultsList Collection.\nfunction findInsertIndex(resultsList, markerToInsert) {\n    const result = resultsList.find(({ marker })=>{\n        return markerToInsert.getStart().isBefore(marker.getStart());\n    });\n    return result ? resultsList.getIndex(result) : resultsList.length;\n}\n/**\n *  Maps RegExp match result to find result.\n */ function regexpMatchToFindResult(matchResult) {\n    const lastGroupIndex = matchResult.length - 1;\n    let startOffset = matchResult.index;\n    // Searches with match all flag have an extra matching group with empty string or white space matched before the word.\n    // If the search term starts with the space already, there is no extra group even with match all flag on.\n    if (matchResult.length === 3) {\n        startOffset += matchResult[1].length;\n    }\n    return {\n        label: matchResult[lastGroupIndex],\n        start: startOffset,\n        end: startOffset + matchResult[lastGroupIndex].length\n    };\n}\n\nconst HIGHLIGHT_CLASS = 'ck-find-result_selected';\n/**\n * Implements the editing part for find and replace plugin. For example conversion, commands etc.\n */ class FindAndReplaceEditing extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            FindAndReplaceUtils\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'FindAndReplaceEditing';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * An object storing the find and replace state within a given editor instance.\n\t */ state;\n    /**\n\t * @inheritDoc\n\t */ init() {\n        this.state = new FindAndReplaceState(this.editor.model);\n        this.set('_isSearchActive', false);\n        this._defineConverters();\n        this._defineCommands();\n        this.listenTo(this.state, 'change:highlightedResult', (eventInfo, name, newValue, oldValue)=>{\n            const { model } = this.editor;\n            model.change((writer)=>{\n                if (oldValue) {\n                    const oldMatchId = oldValue.marker.name.split(':')[1];\n                    const oldMarker = model.markers.get(`findResultHighlighted:${oldMatchId}`);\n                    if (oldMarker) {\n                        writer.removeMarker(oldMarker);\n                    }\n                }\n                if (newValue) {\n                    const newMatchId = newValue.marker.name.split(':')[1];\n                    writer.addMarker(`findResultHighlighted:${newMatchId}`, {\n                        usingOperation: false,\n                        affectsData: false,\n                        range: newValue.marker.getRange()\n                    });\n                }\n            });\n        });\n        /* istanbul ignore next -- @preserve */ const scrollToHighlightedResult = (eventInfo, name, newValue)=>{\n            if (newValue) {\n                const domConverter = this.editor.editing.view.domConverter;\n                const viewRange = this.editor.editing.mapper.toViewRange(newValue.marker.getRange());\n                scrollViewportToShowTarget({\n                    target: domConverter.viewRangeToDom(viewRange),\n                    viewportOffset: 40\n                });\n            }\n        };\n        const debouncedScrollListener = debounce(scrollToHighlightedResult.bind(this), 32);\n        // Debounce scroll as highlight might be changed very frequently, e.g. when there's a replace all command.\n        this.listenTo(this.state, 'change:highlightedResult', debouncedScrollListener, {\n            priority: 'low'\n        });\n        // It's possible that the editor will get destroyed before debounced call kicks in.\n        // This would result with accessing a view three that is no longer in DOM.\n        this.listenTo(this.editor, 'destroy', debouncedScrollListener.cancel);\n        this.on('change:_isSearchActive', (evt, name, isSearchActive)=>{\n            if (isSearchActive) {\n                this.listenTo(this.editor.model.document, 'change:data', this._onDocumentChange);\n            } else {\n                this.stopListening(this.editor.model.document, 'change:data', this._onDocumentChange);\n            }\n        });\n    }\n    /**\n\t * Initiate a search.\n\t */ find(callbackOrText, findAttributes) {\n        this._isSearchActive = true;\n        this.editor.execute('find', callbackOrText, findAttributes);\n        return this.state.results;\n    }\n    /**\n\t * Stops active results from updating, and clears out the results.\n\t */ stop() {\n        this.state.clear(this.editor.model);\n        this._isSearchActive = false;\n    }\n    /**\n\t * Sets up the commands.\n\t */ _defineCommands() {\n        this.editor.commands.add('find', new FindCommand(this.editor, this.state));\n        this.editor.commands.add('findNext', new FindNextCommand(this.editor, this.state));\n        this.editor.commands.add('findPrevious', new FindPreviousCommand(this.editor, this.state));\n        this.editor.commands.add('replace', new ReplaceCommand(this.editor, this.state));\n        this.editor.commands.add('replaceAll', new ReplaceAllCommand(this.editor, this.state));\n    }\n    /**\n\t * Sets up the marker downcast converters for search results highlighting.\n\t */ _defineConverters() {\n        const { editor } = this;\n        // Setup the marker highlighting conversion.\n        editor.conversion.for('editingDowncast').markerToHighlight({\n            model: 'findResult',\n            view: ({ markerName })=>{\n                const [, id] = markerName.split(':');\n                // Marker removal from the view has a bug: https://github.com/ckeditor/ckeditor5/issues/7499\n                // A minimal option is to return a new object for each converted marker...\n                return {\n                    name: 'span',\n                    classes: [\n                        'ck-find-result'\n                    ],\n                    attributes: {\n                        // ...however, adding a unique attribute should be future-proof..\n                        'data-find-result': id\n                    }\n                };\n            }\n        });\n        editor.conversion.for('editingDowncast').markerToHighlight({\n            model: 'findResultHighlighted',\n            view: ({ markerName })=>{\n                const [, id] = markerName.split(':');\n                // Marker removal from the view has a bug: https://github.com/ckeditor/ckeditor5/issues/7499\n                // A minimal option is to return a new object for each converted marker...\n                return {\n                    name: 'span',\n                    classes: [\n                        HIGHLIGHT_CLASS\n                    ],\n                    attributes: {\n                        // ...however, adding a unique attribute should be future-proof..\n                        'data-find-result': id\n                    }\n                };\n            }\n        });\n    }\n    /**\n\t * Reacts to document changes in order to update search list.\n\t */ _onDocumentChange = ()=>{\n        const changedNodes = new Set();\n        const removedMarkers = new Set();\n        const model = this.editor.model;\n        const { results } = this.state;\n        const changes = model.document.differ.getChanges();\n        const changedMarkers = model.document.differ.getChangedMarkers();\n        // Get nodes in which changes happened to re-run a search callback on them.\n        changes.forEach((change)=>{\n            if (!change.position) {\n                return;\n            }\n            if (change.name === '$text' || change.position.nodeAfter && model.schema.isInline(change.position.nodeAfter)) {\n                changedNodes.add(change.position.parent);\n                [\n                    ...model.markers.getMarkersAtPosition(change.position)\n                ].forEach((markerAtChange)=>{\n                    removedMarkers.add(markerAtChange.name);\n                });\n            } else if (change.type === 'insert' && change.position.nodeAfter) {\n                changedNodes.add(change.position.nodeAfter);\n            }\n        });\n        // Get markers from removed nodes also.\n        changedMarkers.forEach(({ name, data: { newRange } })=>{\n            if (newRange && newRange.start.root.rootName === '$graveyard') {\n                removedMarkers.add(name);\n            }\n        });\n        // Get markers from the updated nodes and remove all (search will be re-run on these nodes).\n        changedNodes.forEach((node)=>{\n            const markersInNode = [\n                ...model.markers.getMarkersIntersectingRange(model.createRangeIn(node))\n            ];\n            markersInNode.forEach((marker)=>removedMarkers.add(marker.name));\n        });\n        // Remove results from the changed part of content.\n        removedMarkers.forEach((markerName)=>{\n            if (!results.has(markerName)) {\n                return;\n            }\n            if (results.get(markerName) === this.state.highlightedResult) {\n                this.state.highlightedResult = null;\n            }\n            results.remove(markerName);\n        });\n        // Run search callback again on updated nodes.\n        const changedSearchResults = [];\n        const findAndReplaceUtils = this.editor.plugins.get('FindAndReplaceUtils');\n        changedNodes.forEach((nodeToCheck)=>{\n            const changedNodeSearchResults = findAndReplaceUtils.updateFindResultFromRange(model.createRangeOn(nodeToCheck), model, this.state.lastSearchCallback, results);\n            changedSearchResults.push(...changedNodeSearchResults);\n        });\n        changedMarkers.forEach((markerToCheck)=>{\n            // Handle search result highlight update when T&C plugin is active.\n            // Lookup is performed only on newly inserted markers.\n            if (markerToCheck.data.newRange) {\n                const changedNodeSearchResults = findAndReplaceUtils.updateFindResultFromRange(markerToCheck.data.newRange, model, this.state.lastSearchCallback, results);\n                changedSearchResults.push(...changedNodeSearchResults);\n            }\n        });\n        if (!this.state.highlightedResult && changedSearchResults.length) {\n            // If there are found phrases but none is selected, select the first one.\n            this.state.highlightedResult = changedSearchResults[0];\n        } else {\n            // If there is already highlight item then refresh highlight offset after appending new items.\n            this.state.refreshHighlightOffset(model);\n        }\n    };\n}\n\n/**\n * The find and replace plugin.\n *\n * For a detailed overview, check the {@glink features/find-and-replace Find and replace feature documentation}.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * The {@link module:find-and-replace/findandreplaceediting~FindAndReplaceEditing find and replace editing feature},\n * * The {@link module:find-and-replace/findandreplaceui~FindAndReplaceUI find and replace UI feature}\n */ class FindAndReplace extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            FindAndReplaceEditing,\n            FindAndReplaceUI\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'FindAndReplace';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const ui = this.editor.plugins.get('FindAndReplaceUI');\n        const findAndReplaceEditing = this.editor.plugins.get('FindAndReplaceEditing');\n        const state = findAndReplaceEditing.state;\n        ui.on('findNext', (event, data)=>{\n            // Data is contained only for the \"find\" button.\n            if (data) {\n                state.searchText = data.searchText;\n                findAndReplaceEditing.find(data.searchText, data);\n            } else {\n                // Find next arrow button press.\n                this.editor.execute('findNext');\n            }\n        });\n        ui.on('findPrevious', (event, data)=>{\n            if (data && state.searchText !== data.searchText) {\n                findAndReplaceEditing.find(data.searchText);\n            } else {\n                // Subsequent calls.\n                this.editor.execute('findPrevious');\n            }\n        });\n        ui.on('replace', (event, data)=>{\n            if (state.searchText !== data.searchText) {\n                findAndReplaceEditing.find(data.searchText);\n            }\n            const highlightedResult = state.highlightedResult;\n            if (highlightedResult) {\n                this.editor.execute('replace', data.replaceText, highlightedResult);\n            }\n        });\n        ui.on('replaceAll', (event, data)=>{\n            // The state hadn't been yet built for this search text.\n            if (state.searchText !== data.searchText) {\n                findAndReplaceEditing.find(data.searchText);\n            }\n            this.editor.execute('replaceAll', data.replaceText, state.results);\n        });\n        // Reset the state when the user invalidated last search results, for instance,\n        // by starting typing another search query or changing options.\n        ui.on('searchReseted', ()=>{\n            state.clear(this.editor.model);\n            findAndReplaceEditing.stop();\n        });\n    }\n}\n\nexport { FindAndReplace, FindAndReplaceEditing, FindAndReplaceUI, FindAndReplaceUtils, FindCommand, FindNextCommand, FindPreviousCommand, ReplaceAllCommand, ReplaceCommand };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/ui/findandreplaceformview\n */\n\nimport {\n\tView,\n\tButtonView,\n\tLabeledFieldView,\n\n\tFocusCycler,\n\tcreateLabeledInputText,\n\tsubmitHandler,\n\tViewCollection,\n\n\ttype Template,\n\ttype InputView,\n\ttype FocusableView,\n\tSwitchButtonView,\n\tCollapsibleView\n} from 'ckeditor5/src/ui.js';\n\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\tRect,\n\tisVisible,\n\ttype Locale\n} from 'ckeditor5/src/utils.js';\n\n// See: #8833.\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\nimport '@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css';\nimport '../../theme/findandreplaceform.css';\nimport { icons } from 'ckeditor5/src/core.js';\n\n/**\n * The find and replace form view class.\n *\n * See {@link module:find-and-replace/ui/findandreplaceformview~FindAndReplaceFormView}.\n */\nexport default class FindAndReplaceFormView extends View {\n\t/**\n\t * A collection of child views.\n\t */\n\tpublic children: ViewCollection;\n\n\t/**\n\t * Stores the number of matched search results.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public matchCount: number;\n\n\t/**\n\t * The offset of currently highlighted search result in {@link #matchCount matched results}.\n\t *\n\t * @observable\n\t */\n\tdeclare public readonly highlightOffset: number;\n\n\t/**\n\t * `true` when the search params (find text, options) has been changed by the user since\n\t * the last time find was executed. `false` otherwise.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public isDirty: boolean;\n\n\t/**\n\t * A live object with the aggregated `isEnabled` states of editor commands related to find and\n\t * replace. For instance, it may look as follows:\n\t *\n\t * ```json\n\t * {\n\t * \tfindNext: true,\n\t * \tfindPrevious: true,\n\t * \treplace: false,\n\t * \treplaceAll: false\n\t * }\n\t * ```\n\t *\n\t * @internal\n\t * @observable\n\t */\n\tdeclare public readonly _areCommandsEnabled: Record<string, boolean>;\n\n\t/**\n\t * The content of the counter label displaying the index of the current highlighted match\n\t * on top of the find input, for instance \"3 of 50\".\n\t *\n\t * @internal\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _resultsCounterText: string;\n\n\t/**\n\t * The flag reflecting the state of the \"Match case\" switch button in the search options\n\t * dropdown.\n\t *\n\t * @internal\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _matchCase: boolean;\n\n\t/**\n\t * The flag reflecting the state of the \"Whole words only\" switch button in the search options\n\t * dropdown.\n\t *\n\t * @internal\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _wholeWordsOnly: boolean;\n\n\t/**\n\t * This flag is set `true` when some matches were found and the user didn't change the search\n\t * params (text to find, options) yet. This is only possible immediately after hitting the \"Find\" button.\n\t * `false` when there were no matches (see {@link #matchCount}) or the user changed the params (see {@link #isDirty}).\n\t *\n\t * It is used to control the enabled state of the replace UI (input and buttons); replacing text is only possible\n\t * if this flag is `true`.\n\t *\n\t * @internal\n\t * @observable\n\t */\n\tdeclare public readonly _searchResultsFound: boolean;\n\n\t/**\n\t * The find in text input view that stores the searched string.\n\t *\n\t * @internal\n\t */\n\tpublic readonly _findInputView: LabeledFieldView<InputView>;\n\n\t/**\n\t * The replace input view.\n\t */\n\tprivate readonly _replaceInputView: LabeledFieldView;\n\n\t/**\n\t * The find button view that initializes the search process.\n\t */\n\tprivate readonly _findButtonView: ButtonView;\n\n\t/**\n\t * The find previous button view.\n\t */\n\tprivate readonly _findPrevButtonView: ButtonView;\n\n\t/**\n\t * The find next button view.\n\t */\n\tprivate readonly _findNextButtonView: ButtonView;\n\n\t/**\n\t * A collapsible view aggregating the advanced search options.\n\t */\n\tprivate readonly _advancedOptionsCollapsibleView: CollapsibleView;\n\n\t/**\n\t * A switch button view controlling the \"Match case\" option.\n\t */\n\tprivate readonly _matchCaseSwitchView: SwitchButtonView;\n\n\t/**\n\t * A switch button view controlling the \"Whole words only\" option.\n\t */\n\tprivate readonly _wholeWordsOnlySwitchView: SwitchButtonView;\n\n\t/**\n\t * The replace button view.\n\t */\n\tprivate readonly _replaceButtonView: ButtonView;\n\n\t/**\n\t * The replace all button view.\n\t */\n\tprivate readonly _replaceAllButtonView: ButtonView;\n\n\t/**\n\t * The `div` aggregating the inputs.\n\t */\n\tprivate readonly _inputsDivView: View;\n\n\t/**\n\t * The `div` aggregating the action buttons.\n\t */\n\tprivate readonly _actionButtonsDivView: View;\n\n\t/**\n\t * Tracks information about the DOM focus in the form.\n\t */\n\tprivate readonly _focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tprivate readonly _keystrokes: KeystrokeHandler;\n\n\t/**\n\t * A collection of views that can be focused in the form.\n\t */\n\tprivate readonly _focusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * Helps cycling over {@link #_focusables} in the form.\n\t */\n\tpublic readonly focusCycler: FocusCycler;\n\n\tpublic declare locale: Locale;\n\n\t/**\n\t * Creates a view of find and replace form.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\n\t\tthis.children = this.createCollection();\n\n\t\tthis.set( 'matchCount', 0 );\n\n\t\tthis.set( 'highlightOffset', 0 );\n\n\t\tthis.set( 'isDirty', false );\n\n\t\tthis.set( '_areCommandsEnabled', {} );\n\n\t\tthis.set( '_resultsCounterText', '' );\n\n\t\tthis.set( '_matchCase', false );\n\n\t\tthis.set( '_wholeWordsOnly', false );\n\n\t\tthis.bind( '_searchResultsFound' ).to(\n\t\t\tthis, 'matchCount',\n\t\t\tthis, 'isDirty',\n\t\t\t( matchCount, isDirty ) => {\n\t\t\t\treturn matchCount > 0 && !isDirty;\n\t\t\t}\n\t\t);\n\n\t\tthis._findInputView = this._createInputField( t( 'Find in text…' ) );\n\n\t\tthis._findPrevButtonView = this._createButton( {\n\t\t\tlabel: t( 'Previous result' ),\n\t\t\tclass: 'ck-button-prev',\n\t\t\ticon: icons.previousArrow,\n\t\t\tkeystroke: 'Shift+F3',\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tthis._findNextButtonView = this._createButton( {\n\t\t\tlabel: t( 'Next result' ),\n\t\t\tclass: 'ck-button-next',\n\t\t\ticon: icons.previousArrow,\n\t\t\tkeystroke: 'F3',\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tthis._replaceInputView = this._createInputField( t( 'Replace with…' ), 'ck-labeled-field-replace' );\n\n\t\tthis._inputsDivView = this._createInputsDiv();\n\n\t\tthis._matchCaseSwitchView = this._createMatchCaseSwitch();\n\t\tthis._wholeWordsOnlySwitchView = this._createWholeWordsOnlySwitch();\n\n\t\tthis._advancedOptionsCollapsibleView = this._createAdvancedOptionsCollapsible();\n\n\t\tthis._replaceAllButtonView = this._createButton( {\n\t\t\tlabel: t( 'Replace all' ),\n\t\t\tclass: 'ck-button-replaceall',\n\t\t\twithText: true\n\t\t} );\n\n\t\tthis._replaceButtonView = this._createButton( {\n\t\t\tlabel: t( 'Replace' ),\n\t\t\tclass: 'ck-button-replace',\n\t\t\twithText: true\n\t\t} );\n\n\t\tthis._findButtonView = this._createButton( {\n\t\t\tlabel: t( 'Find' ),\n\t\t\tclass: 'ck-button-find ck-button-action',\n\t\t\twithText: true\n\t\t} );\n\n\t\tthis._actionButtonsDivView = this._createActionButtonsDiv();\n\n\t\tthis._focusTracker = new FocusTracker();\n\n\t\tthis._keystrokes = new KeystrokeHandler();\n\n\t\tthis._focusables = new ViewCollection();\n\n\t\tthis.focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this._focusTracker,\n\t\t\tkeystrokeHandler: this._keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the <kbd>Shift</kbd> + <kbd>Tab</kbd> keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the <kbd>Tab</kbd> key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.children.addMany( [\n\t\t\tthis._inputsDivView,\n\t\t\tthis._advancedOptionsCollapsibleView,\n\t\t\tthis._actionButtonsDivView\n\t\t] );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'form',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-find-and-replace-form'\n\t\t\t\t],\n\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tsubmitHandler( { view: this } );\n\n\t\tthis._initFocusCycling();\n\t\tthis._initKeystrokeHandling();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis._focusTracker.destroy();\n\t\tthis._keystrokes.destroy();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus( direction?: 1 | -1 ): void {\n\t\tif ( direction === -1 ) {\n\t\t\tthis.focusCycler.focusLast();\n\t\t} else {\n\t\t\tthis.focusCycler.focusFirst();\n\t\t}\n\t}\n\n\t/**\n\t * Resets the form before re-appearing.\n\t *\n\t * It clears error messages, hides the match counter and disables the replace feature\n\t * until the next hit of the \"Find\" button.\n\t *\n\t * **Note**: It does not reset inputs and options, though. This way the form works better in editors with\n\t * disappearing toolbar (e.g. BalloonEditor): hiding the toolbar by accident (together with the find and replace UI)\n\t * does not require filling the entire form again.\n\t */\n\tpublic reset(): void {\n\t\tthis._findInputView.errorText = null;\n\t\tthis.isDirty = true;\n\t}\n\n\t/**\n\t * Returns the value of the find input.\n\t */\n\tprivate get _textToFind(): string {\n\t\treturn ( this._findInputView.fieldView.element as HTMLInputElement ).value;\n\t}\n\n\t/**\n\t * Returns the value of the replace input.\n\t */\n\tprivate get _textToReplace() {\n\t\treturn ( this._replaceInputView.fieldView.element as HTMLInputElement ).value;\n\t}\n\n\t/**\n\t * Configures and returns the `<div>` aggregating all form inputs.\n\t */\n\tprivate _createInputsDiv(): View {\n\t\tconst locale = this.locale;\n\t\tconst t = locale.t;\n\t\tconst inputsDivView = new View( locale );\n\n\t\t// Typing in the find field invalidates all previous results (the form is \"dirty\").\n\t\tthis._findInputView.fieldView.on( 'input', () => {\n\t\t\tthis.isDirty = true;\n\t\t} );\n\n\t\t// Pressing prev/next buttons fires related event on the form.\n\t\tthis._findPrevButtonView.delegate( 'execute' ).to( this, 'findPrevious' );\n\t\tthis._findNextButtonView.delegate( 'execute' ).to( this, 'findNext' );\n\n\t\t// Prev/next buttons will be disabled when related editor command gets disabled.\n\t\tthis._findPrevButtonView.bind( 'isEnabled' ).to( this, '_areCommandsEnabled', ( { findPrevious } ) => findPrevious );\n\t\tthis._findNextButtonView.bind( 'isEnabled' ).to( this, '_areCommandsEnabled', ( { findNext } ) => findNext );\n\n\t\tthis._injectFindResultsCounter();\n\n\t\tthis._replaceInputView.bind( 'isEnabled' ).to(\n\t\t\tthis, '_areCommandsEnabled',\n\t\t\tthis, '_searchResultsFound',\n\t\t\t( { replace }, resultsFound ) => replace && resultsFound );\n\n\t\tthis._replaceInputView.bind( 'infoText' ).to(\n\t\t\tthis._replaceInputView, 'isEnabled',\n\t\t\tthis._replaceInputView, 'isFocused',\n\t\t\t( isEnabled, isFocused ) => {\n\t\t\t\tif ( isEnabled || !isFocused ) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn t( 'Tip: Find some text first in order to replace it.' );\n\t\t\t} );\n\n\t\tinputsDivView.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-find-and-replace-form__inputs' ]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis._findInputView,\n\t\t\t\tthis._findPrevButtonView,\n\t\t\t\tthis._findNextButtonView,\n\t\t\t\tthis._replaceInputView\n\t\t\t]\n\t\t} );\n\n\t\treturn inputsDivView;\n\t}\n\n\t/**\n\t * The action performed when the {@link #_findButtonView} is pressed.\n\t */\n\tprivate _onFindButtonExecute() {\n\t\t// When hitting \"Find\" in an empty input, an error should be displayed.\n\t\t// Also, if the form was \"dirty\", it should remain so.\n\t\tif ( !this._textToFind ) {\n\t\t\tconst t = this.t!;\n\n\t\t\tthis._findInputView.errorText = t( 'Text to find must not be empty.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Hitting \"Find\" automatically clears the dirty state.\n\t\tthis.isDirty = false;\n\n\t\tthis.fire<FindNextEvent>( 'findNext', {\n\t\t\tsearchText: this._textToFind,\n\t\t\tmatchCase: this._matchCase,\n\t\t\twholeWords: this._wholeWordsOnly\n\t\t} );\n\t}\n\n\t/**\n\t * Configures an injects the find results counter displaying a \"N of M\" label of the {@link #_findInputView}.\n\t */\n\tprivate _injectFindResultsCounter() {\n\t\tconst locale = this.locale;\n\t\tconst t = locale.t;\n\t\tconst bind = this.bindTemplate;\n\t\tconst resultsCounterView = new View( this.locale );\n\n\t\tthis.bind( '_resultsCounterText' ).to( this, 'highlightOffset', this, 'matchCount',\n\t\t\t( highlightOffset, matchCount ) => t( '%0 of %1', [ highlightOffset, matchCount ] )\n\t\t);\n\n\t\tresultsCounterView.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-results-counter',\n\t\t\t\t\t// The counter only makes sense when the field text corresponds to search results in the editing.\n\t\t\t\t\tbind.if( 'isDirty', 'ck-hidden' )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( '_resultsCounterText' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t// The whole idea is that when the text of the counter changes, its width also increases/decreases and\n\t\t// it consumes more or less space over the input. The input, on the other hand, should adjust it's right\n\t\t// padding so its *entire* text always remains visible and available to the user.\n\t\tconst updateFindInputPadding = () => {\n\t\t\tconst inputElement = this._findInputView.fieldView.element;\n\n\t\t\t// Don't adjust the padding if the input (also: counter) were not rendered or not inserted into DOM yet.\n\t\t\tif ( !inputElement || !isVisible( inputElement ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst counterWidth = new Rect( resultsCounterView.element! ).width;\n\t\t\tconst paddingPropertyName = locale.uiLanguageDirection === 'ltr' ? 'paddingRight' : 'paddingLeft';\n\n\t\t\tif ( !counterWidth ) {\n\t\t\t\tinputElement.style[ paddingPropertyName ] = '';\n\t\t\t} else {\n\t\t\t\tinputElement.style[ paddingPropertyName ] = `calc( 2 * var(--ck-spacing-standard) + ${ counterWidth }px )`;\n\t\t\t}\n\t\t};\n\n\t\t// Adjust the input padding when the text of the counter changes, for instance \"1 of 200\" is narrower than \"123 of 200\".\n\t\t// Using \"low\" priority to let the text be set by the template binding first.\n\t\tthis.on( 'change:_resultsCounterText', updateFindInputPadding, { priority: 'low' } );\n\n\t\t// Adjust the input padding when the counter shows or hides. When hidden, there should be no padding. When it shows, the\n\t\t// padding should be set according to the text of the counter.\n\t\t// Using \"low\" priority to let the text be set by the template binding first.\n\t\tthis.on( 'change:isDirty', updateFindInputPadding, { priority: 'low' } );\n\n\t\t// Put the counter element next to the <input> in the find field.\n\t\t( this._findInputView.template!.children![ 0 ] as Template ).children!.push( resultsCounterView );\n\t}\n\n\t/**\n\t * Creates the collapsible view aggregating the advanced search options.\n\t */\n\tprivate _createAdvancedOptionsCollapsible(): CollapsibleView {\n\t\tconst t = this.locale.t;\n\t\tconst collapsible = new CollapsibleView( this.locale, [\n\t\t\tthis._matchCaseSwitchView,\n\t\t\tthis._wholeWordsOnlySwitchView\n\t\t] );\n\n\t\tcollapsible.set( {\n\t\t\tlabel: t( 'Advanced options' ),\n\t\t\tisCollapsed: true\n\t\t} );\n\n\t\treturn collapsible;\n\t}\n\n\t/**\n\t * Configures and returns the `<div>` element aggregating all form action buttons.\n\t */\n\tprivate _createActionButtonsDiv(): View {\n\t\tconst actionsDivView = new View( this.locale );\n\n\t\tthis._replaceButtonView.bind( 'isEnabled' ).to(\n\t\t\tthis, '_areCommandsEnabled',\n\t\t\tthis, '_searchResultsFound',\n\t\t\t( { replace }, resultsFound ) => replace && resultsFound );\n\n\t\tthis._replaceAllButtonView.bind( 'isEnabled' ).to(\n\t\t\tthis, '_areCommandsEnabled',\n\t\t\tthis, '_searchResultsFound',\n\t\t\t( { replaceAll }, resultsFound ) => replaceAll && resultsFound );\n\n\t\tthis._replaceButtonView.on( 'execute', () => {\n\t\t\tthis.fire( 'replace', {\n\t\t\t\tsearchText: this._textToFind,\n\t\t\t\treplaceText: this._textToReplace\n\t\t\t} );\n\t\t} );\n\n\t\tthis._replaceAllButtonView.on( 'execute', () => {\n\t\t\tthis.fire( 'replaceAll', {\n\t\t\t\tsearchText: this._textToFind,\n\t\t\t\treplaceText: this._textToReplace\n\t\t\t} );\n\n\t\t\tthis.focus();\n\t\t} );\n\n\t\tthis._findButtonView.on( 'execute', this._onFindButtonExecute.bind( this ) );\n\n\t\tactionsDivView.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-find-and-replace-form__actions' ]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis._replaceAllButtonView,\n\t\t\t\tthis._replaceButtonView,\n\t\t\t\tthis._findButtonView\n\t\t\t]\n\t\t} );\n\n\t\treturn actionsDivView;\n\t}\n\n\t/**\n\t * Creates, configures and returns and instance of a dropdown allowing users to narrow\n\t * the search criteria down. The dropdown has a list with switch buttons for each option.\n\t */\n\tprivate _createMatchCaseSwitch(): SwitchButtonView {\n\t\tconst t = this.locale.t;\n\n\t\tconst matchCaseSwitchButton = new SwitchButtonView( this.locale );\n\n\t\tmatchCaseSwitchButton.set( {\n\t\t\tlabel: t( 'Match case' ),\n\t\t\twithText: true\n\t\t} );\n\n\t\t// Let the switch be controlled by form's observable property.\n\t\tmatchCaseSwitchButton.bind( 'isOn' ).to( this, '_matchCase' );\n\n\t\t// // Update the state of the form when a switch is toggled.\n\t\tmatchCaseSwitchButton.on( 'execute', () => {\n\t\t\tthis._matchCase = !this._matchCase;\n\t\t\t// Toggling a switch makes the form dirty because this changes search criteria\n\t\t\t// just like typing text of the find input.\n\t\t\tthis.isDirty = true;\n\t\t} );\n\n\t\treturn matchCaseSwitchButton;\n\t}\n\n\t/**\n\t * Creates, configures and returns and instance of a dropdown allowing users to narrow\n\t * the search criteria down. The dropdown has a list with switch buttons for each option.\n\t */\n\tprivate _createWholeWordsOnlySwitch(): SwitchButtonView {\n\t\tconst t = this.locale.t;\n\n\t\tconst wholeWordsOnlySwitchButton = new SwitchButtonView( this.locale );\n\n\t\twholeWordsOnlySwitchButton.set( {\n\t\t\tlabel: t( 'Whole words only' ),\n\t\t\twithText: true\n\t\t} );\n\n\t\t// Let the switch be controlled by form's observable property.\n\t\twholeWordsOnlySwitchButton.bind( 'isOn' ).to( this, '_wholeWordsOnly' );\n\n\t\t// // Update the state of the form when a switch is toggled.\n\t\twholeWordsOnlySwitchButton.on( 'execute', () => {\n\t\t\tthis._wholeWordsOnly = !this._wholeWordsOnly;\n\t\t\t// Toggling a switch makes the form dirty because this changes search criteria\n\t\t\t// just like typing text of the find input.\n\t\t\tthis.isDirty = true;\n\t\t} );\n\n\t\treturn wholeWordsOnlySwitchButton;\n\t}\n\n\t/**\n\t * Initializes the {@link #_focusables} and {@link #_focusTracker} to allow navigation\n\t * using <kbd>Tab</kbd> and <kbd>Shift</kbd>+<kbd>Tab</kbd> keystrokes in the right order.\n\t */\n\tprivate _initFocusCycling() {\n\t\tconst childViews = [\n\t\t\tthis._findInputView,\n\t\t\tthis._findPrevButtonView,\n\t\t\tthis._findNextButtonView,\n\t\t\tthis._replaceInputView,\n\t\t\tthis._advancedOptionsCollapsibleView.buttonView,\n\t\t\tthis._matchCaseSwitchView,\n\t\t\tthis._wholeWordsOnlySwitchView,\n\t\t\tthis._replaceAllButtonView,\n\t\t\tthis._replaceButtonView,\n\t\t\tthis._findButtonView\n\t\t];\n\n\t\tchildViews.forEach( v => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( v );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis._focusTracker.add( v.element! );\n\t\t} );\n\t}\n\n\t/**\n\t * Initializes the keystroke handling in the form.\n\t */\n\tprivate _initKeystrokeHandling() {\n\t\tconst stopPropagation = ( data: Event ) => data.stopPropagation();\n\t\tconst stopPropagationAndPreventDefault = ( data: Event ) => {\n\t\t\tdata.stopPropagation();\n\t\t\tdata.preventDefault();\n\t\t};\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis._keystrokes.listenTo( this.element! );\n\n\t\t// Find the next result upon F3.\n\t\tthis._keystrokes.set( 'f3', event => {\n\t\t\tstopPropagationAndPreventDefault( event );\n\n\t\t\tthis._findNextButtonView.fire( 'execute' );\n\t\t} );\n\n\t\t// Find the previous result upon F3.\n\t\tthis._keystrokes.set( 'shift+f3', event => {\n\t\t\tstopPropagationAndPreventDefault( event );\n\n\t\t\tthis._findPrevButtonView.fire( 'execute' );\n\t\t} );\n\n\t\t// Find or replace upon pressing Enter in the find and replace fields.\n\t\tthis._keystrokes.set( 'enter', event => {\n\t\t\tconst target = event.target;\n\n\t\t\tif ( target === this._findInputView.fieldView.element ) {\n\t\t\t\tif ( this._areCommandsEnabled.findNext ) {\n\t\t\t\t\tthis._findNextButtonView.fire( 'execute' );\n\t\t\t\t} else {\n\t\t\t\t\tthis._findButtonView.fire( 'execute' );\n\t\t\t\t}\n\t\t\t\tstopPropagationAndPreventDefault( event );\n\t\t\t} else if ( target === this._replaceInputView.fieldView.element && !this.isDirty ) {\n\t\t\t\tthis._replaceButtonView.fire( 'execute' );\n\t\t\t\tstopPropagationAndPreventDefault( event );\n\t\t\t}\n\t\t} );\n\n\t\t// Find previous upon pressing Shift+Enter in the find field.\n\t\tthis._keystrokes.set( 'shift+enter', event => {\n\t\t\tconst target = event.target;\n\n\t\t\tif ( target !== this._findInputView.fieldView.element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( this._areCommandsEnabled.findPrevious ) {\n\t\t\t\tthis._findPrevButtonView.fire( 'execute' );\n\t\t\t} else {\n\t\t\t\tthis._findButtonView.fire( 'execute' );\n\t\t\t}\n\n\t\t\tstopPropagationAndPreventDefault( event );\n\t\t} );\n\n\t\t// Since the form is in the dropdown panel which is a child of the toolbar, the toolbar's\n\t\t// keystroke handler would take over the key management in the URL input.\n\t\t// We need to prevent this ASAP. Otherwise, the basic caret movement using the arrow keys will be impossible.\n\t\tthis._keystrokes.set( 'arrowright', stopPropagation );\n\t\tthis._keystrokes.set( 'arrowleft', stopPropagation );\n\t\tthis._keystrokes.set( 'arrowup', stopPropagation );\n\t\tthis._keystrokes.set( 'arrowdown', stopPropagation );\n\t}\n\n\t/**\n\t * Creates a button view.\n\t *\n\t * @param options The properties of the `ButtonView`.\n\t * @returns The button view instance.\n\t */\n\tprivate _createButton( options: object ): ButtonView {\n\t\tconst button = new ButtonView( this.locale );\n\n\t\tbutton.set( options );\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Creates a labeled input view.\n\t *\n\t * @param label The input label.\n\t * @returns The labeled input view instance.\n\t */\n\tprivate _createInputField( label: string, className?: string ): LabeledFieldView<InputView> {\n\t\tconst labeledInput = new LabeledFieldView( this.locale, createLabeledInputText );\n\n\t\tlabeledInput.label = label;\n\t\tlabeledInput.class = className;\n\n\t\treturn labeledInput;\n\t}\n}\n\n/**\n * Fired when the find next button is triggered.\n *\n * @eventName ~FindAndReplaceFormView#findNext\n * @param data The event data.\n */\nexport type FindNextEvent = {\n\tname: 'findNext';\n\targs: [ data?: FindNextEventData ];\n};\n\nexport type FindNextEventData = FindEventBaseData & {\n\tmatchCase: boolean;\n\twholeWords: boolean;\n};\n\n/**\n * Fired when the find previous button is triggered.\n *\n * @eventName ~FindAndReplaceFormView#findPrevious\n * @param data The event data.\n */\nexport type FindPreviousEvent = {\n\tname: 'findPrevious';\n\targs: [ data?: FindEventBaseData ];\n};\n\n/**\n * Base type for all find/replace events.\n */\nexport type FindEventBaseData = {\n\tsearchText: string;\n};\n\n/**\n * Fired when the replace button is triggered.\n *\n * @eventName ~FindAndReplaceFormView#replace\n * @param data The event data.\n */\nexport type ReplaceEvent = {\n\tname: 'replace';\n\targs: [ data: ReplaceEventData ];\n};\n\nexport type ReplaceEventData = FindEventBaseData & {\n\treplaceText: string;\n};\n\n/**\n * Fired when the replaceAll button is triggered.\n *\n * @eventName ~FindAndReplaceFormView#replaceAll\n * @param data The event data.\n */\nexport type ReplaceAllEvent = {\n\tname: 'replaceAll';\n\targs: [ data: ReplaceEventData ];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/findandreplaceui\n */\n\nimport { type Editor, Plugin } from 'ckeditor5/src/core.js';\nimport {\n\tButtonView,\n\tMenuBarMenuListItemButtonView,\n\tDialog,\n\tDialogViewPosition,\n\tcreateDropdown,\n\tDropdownView,\n\tFormHeaderView,\n\tCssTransitionDisablerMixin,\n\ttype ViewWithCssTransitionDisabler\n} from 'ckeditor5/src/ui.js';\nimport FindAndReplaceFormView from './ui/findandreplaceformview.js';\nimport loupeIcon from '../theme/icons/find-replace.svg';\nimport type FindAndReplaceEditing from './findandreplaceediting.js';\nimport type FindNextCommand from './findnextcommand.js';\nimport type FindPreviousCommand from './findpreviouscommand.js';\nimport type ReplaceCommand from './replacecommand.js';\nimport type ReplaceAllCommand from './replaceallcommand.js';\n\n/**\n * The default find and replace UI.\n *\n * It registers the `'findAndReplace'` UI button in the editor's {@link module:ui/componentfactory~ComponentFactory component factory}.\n * that uses the {@link module:find-and-replace/findandreplace~FindAndReplace FindAndReplace} plugin API.\n */\nexport default class FindAndReplaceUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ Dialog ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'FindAndReplaceUI' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reference to the find and replace form view.\n\t */\n\tpublic formView: FindAndReplaceFormView & ViewWithCssTransitionDisabler | null;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'findAndReplace.uiType', 'dialog' );\n\n\t\tthis.formView = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst isUiUsingDropdown = editor.config.get( 'findAndReplace.uiType' ) === 'dropdown';\n\t\tconst findCommand = editor.commands.get( 'find' )!;\n\t\tconst t = this.editor.t;\n\n\t\t// Register the toolbar component: dropdown or button (that opens a dialog).\n\t\teditor.ui.componentFactory.add( 'findAndReplace', () => {\n\t\t\tlet view: DropdownView | ButtonView;\n\n\t\t\tif ( isUiUsingDropdown ) {\n\t\t\t\tview = this._createDropdown();\n\n\t\t\t\t// Button should be disabled when in source editing mode. See #10001.\n\t\t\t\tview.bind( 'isEnabled' ).to( findCommand );\n\t\t\t} else {\n\t\t\t\tview = this._createDialogButtonForToolbar();\n\t\t\t}\n\n\t\t\teditor.keystrokes.set( 'Ctrl+F', ( data, cancelEvent ) => {\n\t\t\t\tif ( !findCommand.isEnabled ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( view instanceof DropdownView ) {\n\t\t\t\t\tconst dropdownButtonView = view.buttonView;\n\n\t\t\t\t\tif ( !dropdownButtonView.isOn ) {\n\t\t\t\t\t\tdropdownButtonView.fire( 'execute' );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( view.isOn ) {\n\t\t\t\t\t\t// If the dialog is open, do not close it. Instead focus it.\n\t\t\t\t\t\t// Unfortunately we can't simply use:\n\t\t\t\t\t\t// \tthis.formView!.focus();\n\t\t\t\t\t\t// because it would always move focus to the first input field, which we don't want.\n\t\t\t\t\t\teditor.plugins.get( 'Dialog' ).view!.focus();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tview.fire( 'execute' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcancelEvent();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\n\t\tif ( !isUiUsingDropdown ) {\n\t\t\teditor.ui.componentFactory.add( 'menuBar:findAndReplace', () => {\n\t\t\t\treturn this._createDialogButtonForMenuBar();\n\t\t\t} );\n\t\t}\n\n\t\t// Add the information about the keystroke to the accessibility database.\n\t\teditor.accessibility.addKeystrokeInfos( {\n\t\t\tkeystrokes: [\n\t\t\t\t{\n\t\t\t\t\tlabel: t( 'Find in the document' ),\n\t\t\t\t\tkeystroke: 'CTRL+F'\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a dropdown containing the find and replace form.\n\t */\n\tprivate _createDropdown(): DropdownView {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.locale.t;\n\t\tconst dropdownView = createDropdown( editor.locale );\n\n\t\tdropdownView.once( 'change:isOpen', () => {\n\t\t\tthis.formView = this._createFormView();\n\t\t\tthis.formView.children.add(\n\t\t\t\tnew FormHeaderView( editor.locale, {\n\t\t\t\t\tlabel: t( 'Find and replace' )\n\t\t\t\t} ),\n\t\t\t\t0\n\t\t\t);\n\n\t\t\tdropdownView.panelView.children.add( this.formView );\n\t\t} );\n\n\t\t// Every time a dropdown is opened, the search text field should get focused and selected for better UX.\n\t\t// Note: Using the low priority here to make sure the following listener starts working after\n\t\t// the default action of the drop-down is executed (i.e. the panel showed up). Otherwise,\n\t\t// the invisible form/input cannot be focused/selected.\n\t\t//\n\t\t// Each time a dropdown is closed, move the focus back to the find and replace toolbar button\n\t\t// and let the find and replace editing feature know that all search results can be invalidated\n\t\t// and no longer should be marked in the content.\n\t\tdropdownView.on( 'change:isOpen', ( event, name, isOpen ) => {\n\t\t\tif ( isOpen ) {\n\t\t\t\tthis._setupFormView();\n\t\t\t} else {\n\t\t\t\tthis.fire( 'searchReseted' );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\tdropdownView.buttonView.set( {\n\t\t\ticon: loupeIcon,\n\t\t\tlabel: t( 'Find and replace' ),\n\t\t\tkeystroke: 'CTRL+F',\n\t\t\ttooltip: true\n\t\t} );\n\n\t\treturn dropdownView;\n\t}\n\n\t/**\n\t * Creates a button that opens a dialog with the find and replace form.\n\t */\n\tprivate _createDialogButtonForToolbar(): ButtonView {\n\t\tconst editor = this.editor;\n\t\tconst buttonView = this._createButton( ButtonView );\n\t\tconst dialog = editor.plugins.get( 'Dialog' );\n\n\t\tbuttonView.set( {\n\t\t\ttooltip: true\n\t\t} );\n\n\t\t// Button should be on when the find and replace dialog is opened.\n\t\tbuttonView.bind( 'isOn' ).to( dialog, 'id', id => id === 'findAndReplace' );\n\n\t\t// Every time a dialog is opened, the search text field should get focused and selected for better UX.\n\t\t// Each time a dialog is closed, move the focus back to the find and replace toolbar button\n\t\t// and let the find and replace editing feature know that all search results can be invalidated\n\t\t// and no longer should be marked in the content.\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tif ( buttonView.isOn ) {\n\t\t\t\tdialog.hide();\n\t\t\t} else {\n\t\t\t\tthis._showDialog();\n\t\t\t}\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Creates a button for for menu bar that will show find and replace dialog.\n\t */\n\tprivate _createDialogButtonForMenuBar(): MenuBarMenuListItemButtonView {\n\t\tconst buttonView = this._createButton( MenuBarMenuListItemButtonView );\n\t\tconst dialogPlugin = this.editor.plugins.get( 'Dialog' );\n\t\tconst dialog = this.editor.plugins.get( 'Dialog' );\n\n\t\tbuttonView.set( {\n\t\t\trole: 'menuitemcheckbox',\n\t\t\tisToggleable: true\n\t\t} );\n\n\t\t// Button should be on when the find and replace dialog is opened.\n\t\tbuttonView.bind( 'isOn' ).to( dialog, 'id', id => id === 'findAndReplace' );\n\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tif ( dialogPlugin.id === 'findAndReplace' ) {\n\t\t\t\tdialogPlugin.hide();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._showDialog();\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Creates a button for find and replace command to use either in toolbar or in menu bar.\n\t */\n\tprivate _createButton<T extends typeof ButtonView | typeof MenuBarMenuListItemButtonView>( ButtonClass: T ): InstanceType<T> {\n\t\tconst editor = this.editor;\n\t\tconst findCommand = editor.commands.get( 'find' )!;\n\t\tconst buttonView = new ButtonClass( editor.locale ) as InstanceType<T>;\n\t\tconst t = editor.locale.t;\n\n\t\t// Button should be disabled when in source editing mode. See #10001.\n\t\tbuttonView.bind( 'isEnabled' ).to( findCommand );\n\n\t\tbuttonView.set( {\n\t\t\ticon: loupeIcon,\n\t\t\tlabel: t( 'Find and replace' ),\n\t\t\tkeystroke: 'CTRL+F'\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Shows the find and replace dialog.\n\t */\n\tprivate _showDialog(): void {\n\t\tconst editor = this.editor;\n\t\tconst dialog = editor.plugins.get( 'Dialog' );\n\t\tconst t = editor.locale.t;\n\n\t\tif ( !this.formView ) {\n\t\t\tthis.formView = this._createFormView();\n\t\t}\n\n\t\tdialog.show( {\n\t\t\tid: 'findAndReplace',\n\t\t\ttitle: t( 'Find and replace' ),\n\t\t\tcontent: this.formView,\n\t\t\tposition: DialogViewPosition.EDITOR_TOP_SIDE,\n\t\t\tonShow: () => {\n\t\t\t\tthis._setupFormView();\n\t\t\t},\n\n\t\t\tonHide: () => {\n\t\t\t\tthis.fire( 'searchReseted' );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Sets up the form view for the find and replace.\n\t *\n\t * @param formView A related form view.\n\t */\n\tprivate _createFormView(): FindAndReplaceFormView & ViewWithCssTransitionDisabler {\n\t\tconst editor = this.editor;\n\t\tconst formView = new ( CssTransitionDisablerMixin( FindAndReplaceFormView ) )( editor.locale );\n\t\tconst commands = editor.commands;\n\t\tconst findAndReplaceEditing: FindAndReplaceEditing = this.editor.plugins.get( 'FindAndReplaceEditing' );\n\t\tconst editingState = findAndReplaceEditing.state!;\n\n\t\tformView.bind( 'highlightOffset' ).to( editingState, 'highlightedOffset' );\n\n\t\t// Let the form know how many results were found in total.\n\t\tformView.listenTo( editingState.results, 'change', () => {\n\t\t\tformView.matchCount = editingState.results.length;\n\t\t} );\n\n\t\t// Command states are used to enable/disable individual form controls.\n\t\t// To keep things simple, instead of binding 4 individual observables, there's only one that combines every\n\t\t// commands' isEnabled state. Yes, it will change more often but this simplifies the structure of the form.\n\t\tconst findNextCommand: FindNextCommand = commands.get( 'findNext' )!;\n\t\tconst findPreviousCommand: FindPreviousCommand = commands.get( 'findPrevious' )!;\n\t\tconst replaceCommand: ReplaceCommand = commands.get( 'replace' )!;\n\t\tconst replaceAllCommand: ReplaceAllCommand = commands.get( 'replaceAll' )!;\n\t\tformView.bind( '_areCommandsEnabled' ).to(\n\t\t\tfindNextCommand, 'isEnabled',\n\t\t\tfindPreviousCommand, 'isEnabled',\n\t\t\treplaceCommand, 'isEnabled',\n\t\t\treplaceAllCommand, 'isEnabled',\n\t\t\t( findNext, findPrevious, replace, replaceAll ) => ( { findNext, findPrevious, replace, replaceAll } )\n\t\t);\n\n\t\t// The UI plugin works as an interface between the form and the editing part of the feature.\n\t\tformView.delegate( 'findNext', 'findPrevious', 'replace', 'replaceAll' ).to( this );\n\n\t\t// Let the feature know that search results are no longer relevant because the user changed the searched phrase\n\t\t// (or options) but didn't hit the \"Find\" button yet (e.g. still typing).\n\t\tformView.on( 'change:isDirty', ( evt, data, isDirty ) => {\n\t\t\tif ( isDirty ) {\n\t\t\t\tthis.fire( 'searchReseted' );\n\t\t\t}\n\t\t} );\n\n\t\treturn formView;\n\t}\n\n\t/**\n\t * Clears the find and replace form and focuses the search text field.\n\t */\n\tprivate _setupFormView(): void {\n\t\tthis.formView!.disableCssTransitions();\n\t\tthis.formView!.reset();\n\t\tthis.formView!._findInputView.fieldView.select();\n\t\tthis.formView!.enableCssTransitions();\n\t}\n}\n\n/**\n * Fired when the UI was reset and the search results marked in the editing root should be invalidated,\n * for instance, because the user changed the searched phrase (or options) but didn't hit\n * the \"Find\" button yet.\n *\n * @eventName ~FindAndReplaceUI#searchReseted\n */\nexport type SearchResetedEvent = {\n\tname: 'searchReseted';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/findcommand\n*/\n\nimport { Command, type Editor } from 'ckeditor5/src/core.js';\nimport type { Collection } from 'ckeditor5/src/utils.js';\n\nimport type { default as FindAndReplaceState, FindCallback } from './findandreplacestate.js';\nimport type { ResultType } from './findandreplace.js';\nimport type FindAndReplaceUtils from './findandreplaceutils.js';\n\n/**\n * The find command. It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */\nexport default class FindCommand extends Command {\n\t/**\n\t * The find and replace state object used for command operations.\n\t */\n\tprivate _state: FindAndReplaceState;\n\n\t/**\n\t * Creates a new `FindCommand` instance.\n\t *\n\t * @param editor The editor on which this command will be used.\n\t * @param state An object to hold plugin state.\n\t */\n\tconstructor( editor: Editor, state: FindAndReplaceState ) {\n\t\tsuper( editor );\n\n\t\t// The find command is always enabled.\n\t\tthis.isEnabled = true;\n\n\t\t// It does not affect data so should be enabled in read-only mode.\n\t\tthis.affectsData = false;\n\n\t\tthis._state = state;\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @param callbackOrText\n\t * @param options Options object.\n\t * @param options.matchCase If set to `true`, the letter case will be matched.\n\t * @param options.wholeWords If set to `true`, only whole words that match `callbackOrText` will be matched.\n\t *\n\t * @fires execute\n\t */\n\tpublic override execute(\n\t\tcallbackOrText: string | FindCallback,\n\t\t{ matchCase, wholeWords }: FindAttributes = {}\n\t): { results: Collection<ResultType>; findCallback: FindCallback } {\n\t\tconst { editor } = this;\n\t\tconst { model } = editor;\n\t\tconst findAndReplaceUtils: FindAndReplaceUtils = editor.plugins.get( 'FindAndReplaceUtils' );\n\n\t\tlet findCallback: FindCallback | undefined;\n\t\tlet callbackSearchText: string = '';\n\n\t\t// Allow to execute `find()` on a plugin with a keyword only.\n\t\tif ( typeof callbackOrText === 'string' ) {\n\t\t\tfindCallback = ( ...args ) => ( {\n\t\t\t\tresults: findAndReplaceUtils.findByTextCallback( callbackOrText, { matchCase, wholeWords } )( ...args ),\n\t\t\t\tsearchText: callbackOrText\n\t\t\t} );\n\t\t} else {\n\t\t\tfindCallback = callbackOrText;\n\t\t}\n\n\t\t// Wrap the callback to get the search text that will be assigned to the state.\n\t\tconst oldCallback = findCallback;\n\n\t\tfindCallback = ( ...args ) => {\n\t\t\tconst result = oldCallback( ...args );\n\n\t\t\tif ( result && 'searchText' in result ) {\n\t\t\t\tcallbackSearchText = result.searchText;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t// Initial search is done on all nodes in all roots inside the content.\n\t\tconst results = model.document.getRootNames()\n\t\t\t.reduce( ( ( currentResults: Collection<ResultType> | null, rootName ) => findAndReplaceUtils.updateFindResultFromRange(\n\t\t\t\tmodel.createRangeIn( model.document.getRoot( rootName )! ),\n\t\t\t\tmodel,\n\t\t\t\tfindCallback!,\n\t\t\t\tcurrentResults\n\t\t\t) ), null )!;\n\n\t\tthis._state.clear( model );\n\t\tthis._state.results.addMany( results );\n\t\tthis._state.highlightedResult = results.get( 0 );\n\t\tthis._state.searchText = callbackSearchText;\n\n\t\tif ( findCallback ) {\n\t\t\tthis._state.lastSearchCallback = findCallback;\n\t\t}\n\n\t\tthis._state.matchCase = !!matchCase;\n\t\tthis._state.matchWholeWords = !!wholeWords;\n\n\t\treturn {\n\t\t\tresults,\n\t\t\tfindCallback\n\t\t};\n\t}\n}\n\n/**\n * The options object for the find command.\n */\nexport type FindAttributes = { matchCase?: boolean; wholeWords?: boolean };\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/findandreplacestate\n */\n\nimport type { Model, Item } from 'ckeditor5/src/engine.js';\nimport { ObservableMixin, Collection, type CollectionChangeEvent, type ObservableChangeEvent } from 'ckeditor5/src/utils.js';\nimport type { ResultType } from './findandreplace.js';\n\n/**\n * The object storing find and replace plugin state for a given editor instance.\n */\nexport default class FindAndReplaceState extends /* #__PURE__ */ ObservableMixin() {\n\t/**\n\t * A collection of find matches.\n\t *\n\t * @observable\n\t */\n\tdeclare public results: Collection<ResultType>;\n\n\t/**\n\t * Currently highlighted search result in {@link #results matched results}.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public highlightedResult: ResultType | null;\n\n\t/**\n\t * Currently highlighted search result offset in {@link #results matched results}.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public highlightedOffset: number;\n\n\t/**\n\t * Searched text value.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public searchText: string;\n\n\t/**\n\t *  The most recent search callback used by the feature to find matches.\n\t *  It is used to re-run the search when user modifies the editor content.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public lastSearchCallback: FindCallback | null;\n\n\t/**\n\t * Replace text value.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public replaceText: string;\n\n\t/**\n\t * Indicates whether the matchCase checkbox has been checked.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public matchCase: boolean;\n\n\t/**\n\t * Indicates whether the matchWholeWords checkbox has been checked.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public matchWholeWords: boolean;\n\n\t/**\n\t * Creates an instance of the state.\n\t */\n\tpublic constructor( model: Model ) {\n\t\tsuper();\n\n\t\tthis.set( 'results', new Collection() );\n\t\tthis.set( 'highlightedResult', null );\n\t\tthis.set( 'highlightedOffset', 0 );\n\t\tthis.set( 'searchText', '' );\n\t\tthis.set( 'replaceText', '' );\n\t\tthis.set( 'lastSearchCallback', null );\n\t\tthis.set( 'matchCase', false );\n\t\tthis.set( 'matchWholeWords', false );\n\n\t\tthis.results.on<CollectionChangeEvent<ResultType>>( 'change', ( eventInfo, { removed, index } ) => {\n\t\t\tif ( Array.from( removed ).length ) {\n\t\t\t\tlet highlightedResultRemoved = false;\n\n\t\t\t\tmodel.change( writer => {\n\t\t\t\t\tfor ( const removedResult of removed ) {\n\t\t\t\t\t\tif ( this.highlightedResult === removedResult ) {\n\t\t\t\t\t\t\thighlightedResultRemoved = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( model.markers.has( removedResult.marker!.name ) ) {\n\t\t\t\t\t\t\twriter.removeMarker( removedResult.marker! );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tif ( highlightedResultRemoved ) {\n\t\t\t\t\tconst nextHighlightedIndex = index >= this.results.length ? 0 : index;\n\t\t\t\t\tthis.highlightedResult = this.results.get( nextHighlightedIndex );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.on<ObservableChangeEvent<ResultType | null>>( 'change:highlightedResult', ( ) => {\n\t\t\tthis.refreshHighlightOffset( model );\n\t\t} );\n\t}\n\n\t/**\n\t * Cleans the state up and removes markers from the model.\n\t */\n\tpublic clear( model: Model ): void {\n\t\tthis.searchText = '';\n\n\t\tmodel.change( writer => {\n\t\t\tif ( this.highlightedResult ) {\n\t\t\t\tconst oldMatchId = this.highlightedResult.marker!.name.split( ':' )[ 1 ];\n\t\t\t\tconst oldMarker = model.markers.get( `findResultHighlighted:${ oldMatchId }` );\n\n\t\t\t\tif ( oldMarker ) {\n\t\t\t\t\twriter.removeMarker( oldMarker );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t[ ...this.results ].forEach( ( { marker } ) => {\n\t\t\t\twriter.removeMarker( marker! );\n\t\t\t} );\n\t\t} );\n\n\t\tthis.results.clear();\n\t}\n\n\t/**\n\t * Refreshes the highlight result offset based on it's index within the result list.\n\t */\n\tpublic refreshHighlightOffset( model: Model ): void {\n\t\tconst { highlightedResult, results } = this;\n\n\t\tif ( highlightedResult ) {\n\t\t\tthis.highlightedOffset = sortSearchResultsByMarkerPositions( model, [ ...results ] ).indexOf( highlightedResult ) + 1;\n\t\t} else {\n\t\t\tthis.highlightedOffset = 0;\n\t\t}\n\t}\n}\n\n/**\n * Sorts search results by marker positions. Make sure that the results are sorted in the same order as they appear in the document\n * to avoid issues with the `find next` command. Apparently, the order of the results in the state might be different than the order\n * of the markers in the model.\n */\nexport function sortSearchResultsByMarkerPositions( model: Model, results: Array<ResultType> ): Array<ResultType> {\n\tconst sortMapping = { before: -1, same: 0, after: 1, different: 1 };\n\n\t// `compareWith` doesn't play well with multi-root documents, so we need to sort results by root name first\n\t// and then sort them within each root. It prevents \"random\" order of results when the document has multiple roots.\n\t// See more: https://github.com/ckeditor/ckeditor5/pull/17292#issuecomment-2442084549\n\treturn model.document.getRootNames().flatMap( rootName =>\n\t\tresults\n\t\t\t.filter( result => result.marker!.getStart().root.rootName === rootName )\n\t\t\t.sort( ( a, b ) => sortMapping[ a.marker!.getStart().compareWith( b.marker!.getStart() ) ] )\n\t);\n}\n\n/**\n * The callback function used to find matches in the document.\n */\nexport type FindCallback = ( { item, text }: { item: Item; text: string } ) => FindCallbackResultObject | FindCallbackResult;\n\n/**\n * Represents the result of a find callback.\n *\n * The `searchText` attribute in the result object is used to determine if the search text has changed.\n * If returned `searchText` is different than the last search text, the search results will be invalidated\n * while searching for next item and the search will start from the beginning of the document.\n */\nexport type FindCallbackResultObject = {\n\tresults: Array<ResultType>;\n\tsearchText: string;\n};\n\n/**\n * Represents the result of a find callback.\n *\n * @deprecated Use `FindCallbackResultObject` instead.\n */\nexport type FindCallbackResult = Array<ResultType>;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/replacecommandbase\n*/\n\nimport { Command, type Editor } from 'ckeditor5/src/core.js';\nimport type { ResultType } from './findandreplace.js';\nimport type FindAndReplaceState from './findandreplacestate.js';\n\nexport abstract class ReplaceCommandBase extends Command {\n\t/**\n\t * The find and replace state object used for command operations.\n\t */\n\tprotected _state: FindAndReplaceState;\n\n\t/**\n\t * Creates a new `ReplaceCommand` instance.\n\t *\n\t * @param editor Editor on which this command will be used.\n\t * @param state An object to hold plugin state.\n\t */\n\tconstructor( editor: Editor, state: FindAndReplaceState ) {\n\t\tsuper( editor );\n\n\t\t// The replace command is always enabled.\n\t\tthis.isEnabled = true;\n\n\t\tthis._state = state;\n\n\t\t// Since this command executes on particular result independent of selection, it should be checked directly in execute block.\n\t\tthis._isEnabledBasedOnSelection = false;\n\t}\n\n\tpublic abstract override execute( ...args: Array<unknown> ): void;\n\n\t/**\n\t * Common logic for both `replace` commands.\n\t * Replace a given find result by a string or a callback.\n\t *\n\t * @param result A single result from the find command.\n\t */\n\tprotected _replace( replacementText: string, result: ResultType ): void {\n\t\tconst { model } = this.editor;\n\n\t\tconst range = result.marker!.getRange();\n\n\t\t// Don't replace a result that is in non-editable place.\n\t\tif ( !model.canEditAt( range ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\t// Don't replace a result (marker) that found its way into the $graveyard (e.g. removed by collaborators).\n\t\t\tif ( range.root.rootName === '$graveyard' ) {\n\t\t\t\tthis._state.results.remove( result );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet textAttributes = {};\n\n\t\t\tfor ( const item of range.getItems() ) {\n\t\t\t\tif ( item.is( '$text' ) || item.is( '$textProxy' ) ) {\n\t\t\t\t\ttextAttributes = item.getAttributes();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmodel.insertContent( writer.createText( replacementText, textAttributes ), range );\n\n\t\t\tif ( this._state.results.has( result ) ) {\n\t\t\t\tthis._state.results.remove( result );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/replacecommand\n*/\n\nimport type { ResultType } from './findandreplace.js';\nimport { sortSearchResultsByMarkerPositions } from './findandreplacestate.js';\nimport { ReplaceCommandBase } from './replacecommandbase.js';\n\n/**\n * The replace command. It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */\nexport default class ReplaceCommand extends ReplaceCommandBase {\n\t/**\n\t * Replace a given find result by a string or a callback.\n\t *\n\t * @param result A single result from the find command.\n\t *\n\t * @fires execute\n\t */\n\tpublic override execute( replacementText: string, result: ResultType ): void {\n\t\t// We save highlight offset here, as the information about the highlighted result will be lost after the changes.\n\t\t//\n\t\t// It happens because result list is partially regenerated if the result is removed from the paragraph.\n\t\t// Partially means that all sibling result items that are placed in the same paragraph are removed and added again,\n\t\t// which causes the highlighted result to be malformed (usually it's set to first but it's not guaranteed).\n\t\t//\n\t\t// While this saving can be done in editing state, it's better to keep it here, as it's a part of the command logic\n\t\t// and might be super tricky to implement in multi-root documents.\n\t\t//\n\t\t// Keep in mind that the highlighted offset is indexed from 1, as it's displayed to the user. It's why we subtract 1 here.\n\t\t//\n\t\t// More info: https://github.com/ckeditor/ckeditor5/issues/16648\n\t\tconst oldHighlightOffset = Math.max( this._state!.highlightedOffset - 1, 0 );\n\n\t\tthis._replace( replacementText, result );\n\n\t\t// Let's revert the highlight offset to the previous value.\n\t\tif ( this._state!.results.length ) {\n\t\t\t// Highlight offset operates on sorted array, so we need to sort the results first.\n\t\t\t// It's not guaranteed that items in state results are sorted, usually they are, but it's not guaranteed when\n\t\t\t// the result is removed from the paragraph with other highlighted results.\n\t\t\tconst sortedResults = sortSearchResultsByMarkerPositions( this.editor.model, [ ...this._state!.results ] );\n\n\t\t\t// Just make sure that we don't overflow the results array, so use modulo.\n\t\t\tthis._state!.highlightedResult = sortedResults[ oldHighlightOffset % sortedResults.length ];\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/replaceallcommand\n */\n\nimport { Collection } from 'ckeditor5/src/utils.js';\nimport type { ResultType } from './findandreplace.js';\nimport type FindAndReplaceUtils from './findandreplaceutils.js';\nimport { ReplaceCommandBase } from './replacecommandbase.js';\n\n/**\n * The replace all command. It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */\nexport default class ReplaceAllCommand extends ReplaceCommandBase {\n\t/**\n\t * Replaces all the occurrences of `textToReplace` with a given `newText` string.\n\t *\n\t * ```ts\n\t *\treplaceAllCommand.execute( 'replaceAll', 'new text replacement', 'text to replace' );\n\t * ```\n\t *\n\t * Alternatively you can call it from editor instance:\n\t *\n\t * ```ts\n\t *\teditor.execute( 'replaceAll', 'new text', 'old text' );\n\t * ```\n\t *\n\t * @param newText Text that will be inserted to the editor for each match.\n\t * @param textToReplace Text to be replaced or a collection of matches\n\t * as returned by the find command.\n\t *\n\t * @fires module:core/command~Command#event:execute\n\t */\n\tpublic override execute( newText: string, textToReplace: string | Collection<ResultType> ): void {\n\t\tconst { editor } = this;\n\t\tconst { model } = editor;\n\t\tconst findAndReplaceUtils: FindAndReplaceUtils = editor.plugins.get( 'FindAndReplaceUtils' );\n\n\t\tconst results = textToReplace instanceof Collection ?\n\t\t\ttextToReplace : model.document.getRootNames()\n\t\t\t\t.reduce( ( ( currentResults: Collection<ResultType> | null, rootName ) => findAndReplaceUtils.updateFindResultFromRange(\n\t\t\t\t\tmodel.createRangeIn( model.document.getRoot( rootName )! ),\n\t\t\t\t\tmodel,\n\t\t\t\t\tfindAndReplaceUtils.findByTextCallback( textToReplace, this._state ),\n\t\t\t\t\tcurrentResults\n\t\t\t\t) ), null as Collection<ResultType> | null )!;\n\n\t\tif ( results.length ) {\n\t\t\t// Wrapped in single change will batch it into one transaction.\n\t\t\tmodel.change( () => {\n\t\t\t\t[ ...results ].forEach( searchResult => {\n\t\t\t\t\t// Just reuse logic from the replace command to replace a single match.\n\t\t\t\t\tthis._replace( newText, searchResult );\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/findnextcommand\n*/\n\nimport { Command, type Editor } from 'ckeditor5/src/core.js';\nimport type FindAndReplaceState from './findandreplacestate.js';\n\n/**\n * The find next command. Moves the highlight to the next search result.\n *\n * It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */\nexport default class FindNextCommand extends Command {\n\t/**\n\t * The find and replace state object used for command operations.\n\t */\n\tprotected _state: FindAndReplaceState;\n\n\t/**\n\t * Creates a new `FindNextCommand` instance.\n\t *\n\t * @param editor The editor on which this command will be used.\n\t * @param state An object to hold plugin state.\n\t */\n\tconstructor( editor: Editor, state: FindAndReplaceState ) {\n\t\tsuper( editor );\n\n\t\t// It does not affect data so should be enabled in read-only mode.\n\t\tthis.affectsData = false;\n\n\t\tthis._state = state;\n\n\t\tthis.isEnabled = false;\n\n\t\tthis.listenTo( this._state.results, 'change', () => {\n\t\t\tthis.isEnabled = this._state.results.length > 1;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override refresh(): void {\n\t\tthis.isEnabled = this._state.results.length > 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override execute(): void {\n\t\tconst results = this._state.results;\n\t\tconst currentIndex = results.getIndex( this._state.highlightedResult! );\n\t\tconst nextIndex = currentIndex + 1 >= results.length ?\n\t\t\t0 : currentIndex + 1;\n\n\t\tthis._state.highlightedResult = this._state.results.get( nextIndex );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/findpreviouscommand\n*/\n\nimport FindNextCommand from './findnextcommand.js';\n\n/**\n * The find previous command. Moves the highlight to the previous search result.\n *\n * It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n */\nexport default class FindPreviousCommand extends FindNextCommand {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override execute(): void {\n\t\tconst results = this._state.results;\n\t\tconst currentIndex = results.getIndex( this._state.highlightedResult! );\n\t\tconst previousIndex = currentIndex - 1 < 0 ?\n\t\t\tthis._state.results.length - 1 : currentIndex - 1;\n\n\t\tthis._state.highlightedResult = this._state.results.get( previousIndex );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/findandreplaceutils\n */\n\nimport type { Element, Item, Marker, Model, Range } from 'ckeditor5/src/engine.js';\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { Collection, uid } from 'ckeditor5/src/utils.js';\nimport { escapeRegExp } from 'lodash-es';\nimport type { ResultType } from './findandreplace.js';\n\n/**\n * A set of helpers related to find and replace.\n */\nexport default class FindAndReplaceUtils extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'FindAndReplaceUtils' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Executes findCallback and updates search results list.\n\t *\n\t * @param range The model range to scan for matches.\n\t * @param model The model.\n\t * @param findCallback The callback that should return `true` if provided text matches the search term.\n\t * @param startResults An optional collection of find matches that the function should\n\t * start with. This would be a collection returned by a previous `updateFindResultFromRange()` call.\n\t * @returns A collection of objects describing find match.\n\t *\n\t * An example structure:\n\t *\n\t * ```js\n\t * {\n\t *\tid: resultId,\n\t *\tlabel: foundItem.label,\n\t *\tmarker\n\t *\t}\n\t * ```\n\t */\n\tpublic updateFindResultFromRange(\n\t\trange: Range,\n\t\tmodel: Model,\n\t\tfindCallback: ( { item, text }: { item: Item; text: string } ) => Array<ResultType> | { results: Array<ResultType> },\n\t\tstartResults: Collection<ResultType> | null\n\t): Collection<ResultType> {\n\t\tconst results = startResults || new Collection();\n\n\t\tconst checkIfResultAlreadyOnList = ( marker: Marker ) => results.find(\n\t\t\tmarkerItem => {\n\t\t\t\tconst { marker: resultsMarker } = markerItem;\n\n\t\t\t\tconst resultRange = resultsMarker!.getRange();\n\t\t\t\tconst markerRange = marker.getRange();\n\n\t\t\t\treturn resultRange.isEqual( markerRange );\n\t\t\t}\n\t\t);\n\n\t\tmodel.change( writer => {\n\t\t\t[ ...range ].forEach( ( { type, item } ) => {\n\t\t\t\tif ( type === 'elementStart' ) {\n\t\t\t\t\tif ( model.schema.checkChild( item, '$text' ) ) {\n\t\t\t\t\t\tlet foundItems = findCallback( {\n\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\ttext: this.rangeToText( model.createRangeIn( item as Element ) )\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tif ( !foundItems ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( 'results' in foundItems ) {\n\t\t\t\t\t\t\tfoundItems = foundItems.results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfoundItems.forEach( foundItem => {\n\t\t\t\t\t\t\tconst resultId = `findResult:${ uid() }`;\n\t\t\t\t\t\t\tconst marker = writer.addMarker( resultId, {\n\t\t\t\t\t\t\t\tusingOperation: false,\n\t\t\t\t\t\t\t\taffectsData: false,\n\t\t\t\t\t\t\t\trange: writer.createRange(\n\t\t\t\t\t\t\t\t\twriter.createPositionAt( item, foundItem.start ),\n\t\t\t\t\t\t\t\t\twriter.createPositionAt( item, foundItem.end )\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tconst index = findInsertIndex( results, marker );\n\n\t\t\t\t\t\t\tif ( !checkIfResultAlreadyOnList( marker ) ) {\n\t\t\t\t\t\t\t\tresults.add(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid: resultId,\n\t\t\t\t\t\t\t\t\t\tlabel: foundItem.label,\n\t\t\t\t\t\t\t\t\t\tmarker\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Returns text representation of a range. The returned text length should be the same as range length.\n\t * In order to achieve this, this function will replace inline elements (text-line) as new line character (\"\\n\").\n\t *\n\t * @param range The model range.\n\t * @returns The text content of the provided range.\n\t */\n\tpublic rangeToText( range: Range ): string {\n\t\treturn Array.from( range.getItems( { shallow: true } ) ).reduce( ( rangeText, node ) => {\n\t\t\t// Trim text to a last occurrence of an inline element and update range start.\n\t\t\tif ( !( node.is( '$text' ) || node.is( '$textProxy' ) ) ) {\n\t\t\t\t// Editor has only one inline element defined in schema: `<softBreak>` which is treated as new line character in blocks.\n\t\t\t\t// Special handling might be needed for other inline elements (inline widgets).\n\t\t\t\treturn `${ rangeText }\\n`;\n\t\t\t}\n\n\t\t\treturn rangeText + node.data;\n\t\t}, '' );\n\t}\n\n\t/**\n\t * Creates a text matching callback for a specified search term and matching options.\n\t *\n\t * @param searchTerm The search term.\n\t * @param options Matching options.\n\t * \t- options.matchCase=false If set to `true` letter casing will be ignored.\n\t * \t- options.wholeWords=false If set to `true` only whole words that match `callbackOrText` will be matched.\n\t */\n\tpublic findByTextCallback(\n\t\tsearchTerm: string,\n\t\toptions: { matchCase?: boolean; wholeWords?: boolean }\n\t): ( { item, text }: { item: Item; text: string } ) => Array<ResultType> {\n\t\tlet flags = 'gu';\n\n\t\tif ( !options.matchCase ) {\n\t\t\tflags += 'i';\n\t\t}\n\n\t\tlet regExpQuery = `(${ escapeRegExp( searchTerm ) })`;\n\n\t\tif ( options.wholeWords ) {\n\t\t\tconst nonLetterGroup = '[^a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF]';\n\n\t\t\tif ( !new RegExp( '^' + nonLetterGroup ).test( searchTerm ) ) {\n\t\t\t\tregExpQuery = `(^|${ nonLetterGroup }|_)${ regExpQuery }`;\n\t\t\t}\n\n\t\t\tif ( !new RegExp( nonLetterGroup + '$' ).test( searchTerm ) ) {\n\t\t\t\tregExpQuery = `${ regExpQuery }(?=_|${ nonLetterGroup }|$)`;\n\t\t\t}\n\t\t}\n\n\t\tconst regExp = new RegExp( regExpQuery, flags );\n\n\t\tfunction findCallback( { text }: { text: string } ) {\n\t\t\tconst matches = [ ...text.matchAll( regExp ) ];\n\n\t\t\treturn matches.map( regexpMatchToFindResult );\n\t\t}\n\n\t\treturn findCallback;\n\t}\n}\n\n// Finds the appropriate index in the resultsList Collection.\nfunction findInsertIndex( resultsList: Collection<any>, markerToInsert: Marker ) {\n\tconst result = resultsList.find( ( { marker } ) => {\n\t\treturn markerToInsert.getStart().isBefore( marker.getStart() );\n\t} );\n\n\treturn result ? resultsList.getIndex( result ) : resultsList.length;\n}\n\n/**\n *  Maps RegExp match result to find result.\n */\nfunction regexpMatchToFindResult( matchResult: RegExpMatchArray ): ResultType {\n\tconst lastGroupIndex = matchResult.length - 1;\n\n\tlet startOffset = matchResult.index!;\n\n\t// Searches with match all flag have an extra matching group with empty string or white space matched before the word.\n\t// If the search term starts with the space already, there is no extra group even with match all flag on.\n\tif ( matchResult.length === 3 ) {\n\t\tstartOffset += matchResult[ 1 ].length;\n\t}\n\n\treturn {\n\t\tlabel: matchResult[ lastGroupIndex ],\n\t\tstart: startOffset,\n\t\tend: startOffset + matchResult[ lastGroupIndex ].length\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/findandreplaceediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport type { DiffItem, DiffItemAttribute, Element, Node } from 'ckeditor5/src/engine.js';\nimport {\n\tscrollViewportToShowTarget,\n\ttype Collection,\n\ttype GetCallback,\n\ttype ObservableChangeEvent\n} from 'ckeditor5/src/utils.js';\n\nimport FindCommand, { type FindAttributes } from './findcommand.js';\nimport ReplaceCommand from './replacecommand.js';\nimport ReplaceAllCommand from './replaceallcommand.js';\nimport FindNextCommand from './findnextcommand.js';\nimport FindPreviousCommand from './findpreviouscommand.js';\nimport FindAndReplaceState, { type FindCallback } from './findandreplacestate.js';\nimport FindAndReplaceUtils from './findandreplaceutils.js';\nimport type { ResultType } from './findandreplace.js';\n\nimport { debounce } from 'lodash-es';\n\nimport '../theme/findandreplace.css';\n\nconst HIGHLIGHT_CLASS = 'ck-find-result_selected';\n\n/**\n * Implements the editing part for find and replace plugin. For example conversion, commands etc.\n */\nexport default class FindAndReplaceEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ FindAndReplaceUtils ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'FindAndReplaceEditing' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * An object storing the find and replace state within a given editor instance.\n\t */\n\tpublic state?: FindAndReplaceState;\n\n\t/**\n\t * A flag that indicates that the user has started a search and the editor is listening for changes\n\t * to the text on which it will perform an automatic search. Among other things, the mode is activated\n\t * when the user first clicks 'Find' button and then later deactivated when the modal or search dropdown is closed.\n\t *\n\t * @internal\n\t */\n\tpublic declare _isSearchActive: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tthis.state = new FindAndReplaceState( this.editor.model );\n\t\tthis.set( '_isSearchActive', false );\n\n\t\tthis._defineConverters();\n\t\tthis._defineCommands();\n\n\t\tthis.listenTo( this.state, 'change:highlightedResult', ( eventInfo, name, newValue, oldValue ) => {\n\t\t\tconst { model } = this.editor;\n\n\t\t\tmodel.change( writer => {\n\t\t\t\tif ( oldValue ) {\n\t\t\t\t\tconst oldMatchId = oldValue.marker.name.split( ':' )[ 1 ];\n\t\t\t\t\tconst oldMarker = model.markers.get( `findResultHighlighted:${ oldMatchId }` );\n\n\t\t\t\t\tif ( oldMarker ) {\n\t\t\t\t\t\twriter.removeMarker( oldMarker );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( newValue ) {\n\t\t\t\t\tconst newMatchId = newValue.marker.name.split( ':' )[ 1 ];\n\t\t\t\t\twriter.addMarker( `findResultHighlighted:${ newMatchId }`, {\n\t\t\t\t\t\tusingOperation: false,\n\t\t\t\t\t\taffectsData: false,\n\t\t\t\t\t\trange: newValue.marker.getRange()\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t/* istanbul ignore next -- @preserve */\n\t\tconst scrollToHighlightedResult: GetCallback<ObservableChangeEvent> = ( eventInfo, name, newValue ) => {\n\t\t\tif ( newValue ) {\n\t\t\t\tconst domConverter = this.editor.editing.view.domConverter;\n\t\t\t\tconst viewRange = this.editor.editing.mapper.toViewRange( newValue.marker.getRange() );\n\n\t\t\t\tscrollViewportToShowTarget( {\n\t\t\t\t\ttarget: domConverter.viewRangeToDom( viewRange ),\n\t\t\t\t\tviewportOffset: 40\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\n\t\tconst debouncedScrollListener = debounce( scrollToHighlightedResult.bind( this ), 32 );\n\t\t// Debounce scroll as highlight might be changed very frequently, e.g. when there's a replace all command.\n\t\tthis.listenTo<ObservableChangeEvent>( this.state, 'change:highlightedResult', debouncedScrollListener, { priority: 'low' } );\n\n\t\t// It's possible that the editor will get destroyed before debounced call kicks in.\n\t\t// This would result with accessing a view three that is no longer in DOM.\n\t\tthis.listenTo( this.editor, 'destroy', debouncedScrollListener.cancel );\n\n\t\tthis.on<ObservableChangeEvent<boolean>>( 'change:_isSearchActive', ( evt, name, isSearchActive ) => {\n\t\t\tif ( isSearchActive ) {\n\t\t\t\tthis.listenTo( this.editor.model.document, 'change:data', this._onDocumentChange );\n\t\t\t} else {\n\t\t\t\tthis.stopListening( this.editor.model.document, 'change:data', this._onDocumentChange );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Initiate a search.\n\t */\n\tpublic find( callbackOrText: string | FindCallback, findAttributes?: FindAttributes ): Collection<ResultType> {\n\t\tthis._isSearchActive = true;\n\t\tthis.editor.execute( 'find', callbackOrText, findAttributes );\n\n\t\treturn this.state!.results;\n\t}\n\n\t/**\n\t * Stops active results from updating, and clears out the results.\n\t */\n\tpublic stop(): void {\n\t\tthis.state!.clear( this.editor.model );\n\t\tthis._isSearchActive = false;\n\t}\n\n\t/**\n\t * Sets up the commands.\n\t */\n\tprivate _defineCommands(): void {\n\t\tthis.editor.commands.add( 'find', new FindCommand( this.editor, this.state! ) );\n\t\tthis.editor.commands.add( 'findNext', new FindNextCommand( this.editor, this.state! ) );\n\t\tthis.editor.commands.add( 'findPrevious', new FindPreviousCommand( this.editor, this.state! ) );\n\t\tthis.editor.commands.add( 'replace', new ReplaceCommand( this.editor, this.state! ) );\n\t\tthis.editor.commands.add( 'replaceAll', new ReplaceAllCommand( this.editor, this.state! ) );\n\t}\n\n\t/**\n\t * Sets up the marker downcast converters for search results highlighting.\n\t */\n\tprivate _defineConverters(): void {\n\t\tconst { editor } = this;\n\n\t\t// Setup the marker highlighting conversion.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToHighlight( {\n\t\t\tmodel: 'findResult',\n\t\t\tview: ( { markerName } ) => {\n\t\t\t\tconst [ , id ] = markerName.split( ':' );\n\n\t\t\t\t// Marker removal from the view has a bug: https://github.com/ckeditor/ckeditor5/issues/7499\n\t\t\t\t// A minimal option is to return a new object for each converted marker...\n\t\t\t\treturn {\n\t\t\t\t\tname: 'span',\n\t\t\t\t\tclasses: [ 'ck-find-result' ],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t// ...however, adding a unique attribute should be future-proof..\n\t\t\t\t\t\t'data-find-result': id\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.for( 'editingDowncast' ).markerToHighlight( {\n\t\t\tmodel: 'findResultHighlighted',\n\t\t\tview: ( { markerName } ) => {\n\t\t\t\tconst [ , id ] = markerName.split( ':' );\n\n\t\t\t\t// Marker removal from the view has a bug: https://github.com/ckeditor/ckeditor5/issues/7499\n\t\t\t\t// A minimal option is to return a new object for each converted marker...\n\t\t\t\treturn {\n\t\t\t\t\tname: 'span',\n\t\t\t\t\tclasses: [ HIGHLIGHT_CLASS ],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t// ...however, adding a unique attribute should be future-proof..\n\t\t\t\t\t\t'data-find-result': id\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Reacts to document changes in order to update search list.\n\t */\n\tprivate _onDocumentChange = () => {\n\t\tconst changedNodes = new Set<Node>();\n\t\tconst removedMarkers = new Set<string>();\n\t\tconst model = this.editor.model;\n\t\tconst { results } = this.state!;\n\n\t\tconst changes = model.document.differ.getChanges() as Array<Exclude<DiffItem, DiffItemAttribute>>;\n\t\tconst changedMarkers = model.document.differ.getChangedMarkers();\n\n\t\t// Get nodes in which changes happened to re-run a search callback on them.\n\t\tchanges.forEach( change => {\n\t\t\tif ( !change.position ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( change.name === '$text' || ( change.position.nodeAfter && model.schema.isInline( change.position.nodeAfter ) ) ) {\n\t\t\t\tchangedNodes.add( change.position.parent as Element );\n\n\t\t\t\t[ ...model.markers.getMarkersAtPosition( change.position ) ].forEach( markerAtChange => {\n\t\t\t\t\tremovedMarkers.add( markerAtChange.name );\n\t\t\t\t} );\n\t\t\t} else if ( change.type === 'insert' && change.position.nodeAfter ) {\n\t\t\t\tchangedNodes.add( change.position.nodeAfter );\n\t\t\t}\n\t\t} );\n\n\t\t// Get markers from removed nodes also.\n\t\tchangedMarkers.forEach( ( { name, data: { newRange } } ) => {\n\t\t\tif ( newRange && newRange.start.root.rootName === '$graveyard' ) {\n\t\t\t\tremovedMarkers.add( name );\n\t\t\t}\n\t\t} );\n\n\t\t// Get markers from the updated nodes and remove all (search will be re-run on these nodes).\n\t\tchangedNodes.forEach( node => {\n\t\t\tconst markersInNode = [ ...model.markers.getMarkersIntersectingRange( model.createRangeIn( node as Element ) ) ];\n\n\t\t\tmarkersInNode.forEach( marker => removedMarkers.add( marker.name ) );\n\t\t} );\n\n\t\t// Remove results from the changed part of content.\n\t\tremovedMarkers.forEach( markerName => {\n\t\t\tif ( !results.has( markerName ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( results.get( markerName ) === this.state!.highlightedResult ) {\n\t\t\t\tthis.state!.highlightedResult = null;\n\t\t\t}\n\n\t\t\tresults.remove( markerName );\n\t\t} );\n\n\t\t// Run search callback again on updated nodes.\n\t\tconst changedSearchResults: Array<ResultType> = [];\n\t\tconst findAndReplaceUtils: FindAndReplaceUtils = this.editor.plugins.get( 'FindAndReplaceUtils' );\n\n\t\tchangedNodes.forEach( nodeToCheck => {\n\t\t\tconst changedNodeSearchResults = findAndReplaceUtils.updateFindResultFromRange(\n\t\t\t\tmodel.createRangeOn( nodeToCheck ), model, this.state!.lastSearchCallback!, results\n\t\t\t);\n\n\t\t\tchangedSearchResults.push( ...changedNodeSearchResults );\n\t\t} );\n\n\t\tchangedMarkers.forEach( markerToCheck => {\n\t\t\t// Handle search result highlight update when T&C plugin is active.\n\t\t\t// Lookup is performed only on newly inserted markers.\n\t\t\tif ( markerToCheck.data.newRange ) {\n\t\t\t\tconst changedNodeSearchResults = findAndReplaceUtils.updateFindResultFromRange(\n\t\t\t\t\tmarkerToCheck.data.newRange, model, this.state!.lastSearchCallback!, results\n\t\t\t\t);\n\n\t\t\t\tchangedSearchResults.push( ...changedNodeSearchResults );\n\t\t\t}\n\t\t} );\n\n\t\tif ( !this.state!.highlightedResult && changedSearchResults.length ) {\n\t\t\t// If there are found phrases but none is selected, select the first one.\n\t\t\tthis.state!.highlightedResult = changedSearchResults[ 0 ];\n\t\t} else {\n\t\t\t// If there is already highlight item then refresh highlight offset after appending new items.\n\t\t\tthis.state!.refreshHighlightOffset( model );\n\t\t}\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module find-and-replace/findandreplace\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport FindAndReplaceUI, { type SearchResetedEvent } from './findandreplaceui.js';\nimport FindAndReplaceEditing from './findandreplaceediting.js';\nimport type { Marker } from 'ckeditor5/src/engine.js';\nimport type { FindNextEvent, FindPreviousEvent, ReplaceAllEvent, ReplaceEvent } from './ui/findandreplaceformview.js';\n\nexport type ResultType = {\n\tid?: string;\n\tlabel?: string;\n\tstart?: number;\n\tend?: number;\n\tmarker?: Marker;\n};\n\n/**\n * The find and replace plugin.\n *\n * For a detailed overview, check the {@glink features/find-and-replace Find and replace feature documentation}.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * The {@link module:find-and-replace/findandreplaceediting~FindAndReplaceEditing find and replace editing feature},\n * * The {@link module:find-and-replace/findandreplaceui~FindAndReplaceUI find and replace UI feature}\n */\nexport default class FindAndReplace extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ FindAndReplaceEditing, FindAndReplaceUI ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'FindAndReplace' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst ui = this.editor.plugins.get( 'FindAndReplaceUI' );\n\t\tconst findAndReplaceEditing = this.editor.plugins.get( 'FindAndReplaceEditing' );\n\t\tconst state = findAndReplaceEditing.state!;\n\n\t\tui.on<FindNextEvent>( 'findNext', ( event, data ) => {\n\t\t\t// Data is contained only for the \"find\" button.\n\t\t\tif ( data ) {\n\t\t\t\tstate.searchText = data.searchText;\n\t\t\t\tfindAndReplaceEditing.find( data.searchText, data );\n\t\t\t} else {\n\t\t\t\t// Find next arrow button press.\n\t\t\t\tthis.editor.execute( 'findNext' );\n\t\t\t}\n\t\t} );\n\n\t\tui.on<FindPreviousEvent>( 'findPrevious', ( event, data ) => {\n\t\t\tif ( data && state.searchText !== data.searchText ) {\n\t\t\t\tfindAndReplaceEditing.find( data.searchText );\n\t\t\t} else {\n\t\t\t\t// Subsequent calls.\n\t\t\t\tthis.editor.execute( 'findPrevious' );\n\t\t\t}\n\t\t} );\n\n\t\tui.on<ReplaceEvent>( 'replace', ( event, data ) => {\n\t\t\tif ( state.searchText !== data.searchText ) {\n\t\t\t\tfindAndReplaceEditing.find( data.searchText );\n\t\t\t}\n\n\t\t\tconst highlightedResult = state.highlightedResult;\n\n\t\t\tif ( highlightedResult ) {\n\t\t\t\tthis.editor.execute( 'replace', data.replaceText, highlightedResult );\n\t\t\t}\n\t\t} );\n\n\t\tui.on<ReplaceAllEvent>( 'replaceAll', ( event, data ) => {\n\t\t\t// The state hadn't been yet built for this search text.\n\t\t\tif ( state.searchText !== data.searchText ) {\n\t\t\t\tfindAndReplaceEditing.find( data.searchText );\n\t\t\t}\n\n\t\t\tthis.editor.execute( 'replaceAll', data.replaceText, state.results );\n\t\t} );\n\n\t\t// Reset the state when the user invalidated last search results, for instance,\n\t\t// by starting typing another search query or changing options.\n\t\tui.on<SearchResetedEvent>( 'searchReseted', () => {\n\t\t\tstate.clear( this.editor.model );\n\t\t\tfindAndReplaceEditing.stop();\n\t\t} );\n\t}\n}\n"]}